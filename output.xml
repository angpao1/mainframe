<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190504 09:54:28.942" generator="Robot 3.1.1 (Python 2.7.16 on linux2)">
<suite source="/tests" id="s1" name="Tests">
<kw type="setup" name="Setup suite running">
<msg timestamp="20190504 09:54:29.042" level="TRACE">Arguments: [  ]</msg>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${folder}</arg>
</arguments>
<msg timestamp="20190504 09:54:29.044" level="TRACE">Arguments: [ '/tests/../screenshots' ]</msg>
<msg timestamp="20190504 09:54:29.046" html="yes" level="INFO">Created directory '&lt;a href="file:///screenshots"&gt;/screenshots&lt;/a&gt;'.</msg>
<msg timestamp="20190504 09:54:29.046" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:29.046" starttime="20190504 09:54:29.043"></status>
</kw>
<kw name="Open Connection" library="Mainframe3270">
<doc>Create a connection with IBM3270 mainframe with the default port 23. To make a connection with the mainframe
you only must inform the Host. You can pass the Logical Unit Name and the Port as optional.</doc>
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20190504 09:54:29.047" level="TRACE">Arguments: [ 'pub400.com' ]</msg>
<msg timestamp="20190504 09:54:32.611" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.611" starttime="20190504 09:54:29.046"></status>
</kw>
<msg timestamp="20190504 09:54:32.612" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.612" starttime="20190504 09:54:29.041"></status>
</kw>
<suite source="/tests/Keyword_Exceptions_Test.robot" id="s1-s1" name="Keyword Exceptions Test">
<test id="s1-s1-t1" name="Open Connection">
<kw name="Wait Field Detected" library="Mainframe3270">
<doc>Wait until the screen is ready, the cursor has been positioned
on a modifiable field, and the keyboard is unlocked.</doc>
<msg timestamp="20190504 09:54:32.627" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:32.628" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.628" starttime="20190504 09:54:32.627"></status>
</kw>
<kw name="Set Screenshot Folder" library="Mainframe3270">
<doc>Set a folder to keep the html files generated by the `Take Screenshot` keyword.</doc>
<arguments>
<arg>${folder}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.629" level="TRACE">Arguments: [ '/tests/../screenshots' ]</msg>
<msg timestamp="20190504 09:54:32.629" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.629" starttime="20190504 09:54:32.628"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:32.630" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:32.630" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.630" starttime="20190504 09:54:32.630"></status>
</kw>
<tags>
<tag>KET</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:32.630" critical="yes" starttime="20190504 09:54:32.625"></status>
</test>
<test id="s1-s1-t2" name="Test Read">
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>1</arg>
<arg>10</arg>
<arg>21</arg>
</arguments>
<assign>
<var>${read_text}</var>
</assign>
<msg timestamp="20190504 09:54:32.633" level="TRACE">Arguments: [ '1' | '10' | '21' ]</msg>
<msg timestamp="20190504 09:54:32.633" level="TRACE">Return: b'Welcome to PUB400.COM'</msg>
<msg timestamp="20190504 09:54:32.634" level="INFO">${read_text} = Welcome to PUB400.COM</msg>
<status status="PASS" endtime="20190504 09:54:32.634" starttime="20190504 09:54:32.633"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${welcome_text_expected_error}</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${welcome_title}</arg>
<arg>${read_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.635" level="TRACE">Arguments: [ 'Welcome to PUB400.COM * your public IBM i server != Welcome to PUB400.COM' | 'Should Be Equal As Strings' | '${welcome_title}' | '${read_text}' ]</msg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${welcome_title}</arg>
<arg>${read_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.635" level="TRACE">Arguments: [ 'Welcome to PUB400.COM * your public IBM i server' | b'Welcome to PUB400.COM' ]</msg>
<msg timestamp="20190504 09:54:32.636" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'str'&gt;</msg>
<msg timestamp="20190504 09:54:32.636" level="FAIL">Welcome to PUB400.COM * your public IBM i server != Welcome to PUB400.COM</msg>
<msg timestamp="20190504 09:54:32.636" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20190504 09:54:32.636" starttime="20190504 09:54:32.635"></status>
</kw>
<msg timestamp="20190504 09:54:32.637" level="TRACE">Return: 'Welcome to PUB400.COM * your public IBM i server != Welcome to PUB400.COM'</msg>
<status status="PASS" endtime="20190504 09:54:32.637" starttime="20190504 09:54:32.634"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${x_axis_exceed_expected_error}</arg>
<arg>Read</arg>
<arg>4</arg>
<arg>48</arg>
<arg>34</arg>
</arguments>
<msg timestamp="20190504 09:54:32.638" level="TRACE">Arguments: [ 'You have exceeded the x-axis limit of the mainframe screen' | 'Read' | '4' | '48' | '34' ]</msg>
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>4</arg>
<arg>48</arg>
<arg>34</arg>
</arguments>
<msg timestamp="20190504 09:54:32.639" level="TRACE">Arguments: [ '4' | '48' | '34' ]</msg>
<msg timestamp="20190504 09:54:32.639" level="FAIL">You have exceeded the x-axis limit of the mainframe screen</msg>
<msg timestamp="20190504 09:54:32.639" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 115, in read
    raise Exception('You have exceeded the x-axis limit of the mainframe screen')</msg>
<status status="FAIL" endtime="20190504 09:54:32.639" starttime="20190504 09:54:32.638"></status>
</kw>
<msg timestamp="20190504 09:54:32.640" level="TRACE">Return: 'You have exceeded the x-axis limit of the mainframe screen'</msg>
<status status="PASS" endtime="20190504 09:54:32.640" starttime="20190504 09:54:32.638"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${x_axis_exceed_expected_error}</arg>
<arg>Read</arg>
<arg>4</arg>
<arg>81</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20190504 09:54:32.641" level="TRACE">Arguments: [ 'You have exceeded the x-axis limit of the mainframe screen' | 'Read' | '4' | '81' | '1' ]</msg>
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>4</arg>
<arg>81</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20190504 09:54:32.641" level="TRACE">Arguments: [ '4' | '81' | '1' ]</msg>
<msg timestamp="20190504 09:54:32.642" level="FAIL">You have exceeded the x-axis limit of the mainframe screen</msg>
<msg timestamp="20190504 09:54:32.642" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 112, in read
    self._check_limits(ypos, xpos)
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 556, in _check_limits
    raise Exception('You have exceeded the x-axis limit of the mainframe screen')</msg>
<status status="FAIL" endtime="20190504 09:54:32.642" starttime="20190504 09:54:32.641"></status>
</kw>
<msg timestamp="20190504 09:54:32.642" level="TRACE">Return: 'You have exceeded the x-axis limit of the mainframe screen'</msg>
<status status="PASS" endtime="20190504 09:54:32.642" starttime="20190504 09:54:32.640"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${y_axis_exceed_expected_error}</arg>
<arg>Read</arg>
<arg>25</arg>
<arg>48</arg>
<arg>34</arg>
</arguments>
<msg timestamp="20190504 09:54:32.643" level="TRACE">Arguments: [ 'You have exceeded the y-axis limit of the mainframe screen' | 'Read' | '25' | '48' | '34' ]</msg>
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>25</arg>
<arg>48</arg>
<arg>34</arg>
</arguments>
<msg timestamp="20190504 09:54:32.643" level="TRACE">Arguments: [ '25' | '48' | '34' ]</msg>
<msg timestamp="20190504 09:54:32.643" level="FAIL">You have exceeded the y-axis limit of the mainframe screen</msg>
<msg timestamp="20190504 09:54:32.644" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 112, in read
    self._check_limits(ypos, xpos)
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 554, in _check_limits
    raise Exception('You have exceeded the y-axis limit of the mainframe screen')</msg>
<status status="FAIL" endtime="20190504 09:54:32.644" starttime="20190504 09:54:32.643"></status>
</kw>
<msg timestamp="20190504 09:54:32.644" level="TRACE">Return: 'You have exceeded the y-axis limit of the mainframe screen'</msg>
<status status="PASS" endtime="20190504 09:54:32.644" starttime="20190504 09:54:32.643"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:32.645" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:32.645" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.645" starttime="20190504 09:54:32.645"></status>
</kw>
<tags>
<tag>KET</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:32.645" critical="yes" starttime="20190504 09:54:32.632"></status>
</test>
<test id="s1-s1-t3" name="Test Write In Position">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${x_axis_exceed_expected_error}</arg>
<arg>Write In Position</arg>
<arg>${write_text}</arg>
<arg>10</arg>
<arg>81</arg>
</arguments>
<msg timestamp="20190504 09:54:32.648" level="TRACE">Arguments: [ 'You have exceeded the x-axis limit of the mainframe screen' | 'Write In Position' | '${write_text}' | '10' | '81' ]</msg>
<kw name="Write In Position" library="Mainframe3270">
<doc>Send a string to the screen at screen co-ordinates "ypos"/"xpos" and a Enter.</doc>
<arguments>
<arg>${write_text}</arg>
<arg>10</arg>
<arg>81</arg>
</arguments>
<msg timestamp="20190504 09:54:32.648" level="TRACE">Arguments: [ 'TEST' | '10' | '81' ]</msg>
<msg timestamp="20190504 09:54:32.649" level="FAIL">You have exceeded the x-axis limit of the mainframe screen</msg>
<msg timestamp="20190504 09:54:32.649" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 257, in write_in_position
    self._write(txt, ypos=ypos, xpos=xpos, enter='1')
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 273, in _write
    self._check_limits(int(ypos), int(xpos))
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 556, in _check_limits
    raise Exception('You have exceeded the x-axis limit of the mainframe screen')</msg>
<status status="FAIL" endtime="20190504 09:54:32.649" starttime="20190504 09:54:32.648"></status>
</kw>
<msg timestamp="20190504 09:54:32.649" level="TRACE">Return: 'You have exceeded the x-axis limit of the mainframe screen'</msg>
<status status="PASS" endtime="20190504 09:54:32.649" starttime="20190504 09:54:32.648"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${y_axis_exceed_expected_error}</arg>
<arg>Write In Position</arg>
<arg>${write_text}</arg>
<arg>25</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20190504 09:54:32.650" level="TRACE">Arguments: [ 'You have exceeded the y-axis limit of the mainframe screen' | 'Write In Position' | '${write_text}' | '25' | '10' ]</msg>
<kw name="Write In Position" library="Mainframe3270">
<doc>Send a string to the screen at screen co-ordinates "ypos"/"xpos" and a Enter.</doc>
<arguments>
<arg>${write_text}</arg>
<arg>25</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20190504 09:54:32.651" level="TRACE">Arguments: [ 'TEST' | '25' | '10' ]</msg>
<msg timestamp="20190504 09:54:32.651" level="FAIL">You have exceeded the y-axis limit of the mainframe screen</msg>
<msg timestamp="20190504 09:54:32.651" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 257, in write_in_position
    self._write(txt, ypos=ypos, xpos=xpos, enter='1')
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 273, in _write
    self._check_limits(int(ypos), int(xpos))
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 554, in _check_limits
    raise Exception('You have exceeded the y-axis limit of the mainframe screen')</msg>
<status status="FAIL" endtime="20190504 09:54:32.651" starttime="20190504 09:54:32.650"></status>
</kw>
<msg timestamp="20190504 09:54:32.651" level="TRACE">Return: 'You have exceeded the y-axis limit of the mainframe screen'</msg>
<status status="PASS" endtime="20190504 09:54:32.651" starttime="20190504 09:54:32.650"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:32.652" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:32.652" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.652" starttime="20190504 09:54:32.652"></status>
</kw>
<tags>
<tag>KET</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:32.652" critical="yes" starttime="20190504 09:54:32.647"></status>
</test>
<test id="s1-s1-t4" name="Test Write Bare In Position">
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${x_axis_exceed_expected_error}</arg>
<arg>Write Bare In Position</arg>
<arg>${write_text}</arg>
<arg>10</arg>
<arg>81</arg>
</arguments>
<msg timestamp="20190504 09:54:32.655" level="TRACE">Arguments: [ 'You have exceeded the x-axis limit of the mainframe screen' | 'Write Bare In Position' | '${write_text}' | '10' | '81' ]</msg>
<kw name="Write Bare In Position" library="Mainframe3270">
<doc>Send only the string to the screen at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>${write_text}</arg>
<arg>10</arg>
<arg>81</arg>
</arguments>
<msg timestamp="20190504 09:54:32.656" level="TRACE">Arguments: [ 'TEST' | '10' | '81' ]</msg>
<msg timestamp="20190504 09:54:32.656" level="FAIL">You have exceeded the x-axis limit of the mainframe screen</msg>
<msg timestamp="20190504 09:54:32.656" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 268, in write_bare_in_position
    self._write(txt, ypos=ypos, xpos=xpos)
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 273, in _write
    self._check_limits(int(ypos), int(xpos))
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 556, in _check_limits
    raise Exception('You have exceeded the x-axis limit of the mainframe screen')</msg>
<status status="FAIL" endtime="20190504 09:54:32.656" starttime="20190504 09:54:32.655"></status>
</kw>
<msg timestamp="20190504 09:54:32.657" level="TRACE">Return: 'You have exceeded the x-axis limit of the mainframe screen'</msg>
<status status="PASS" endtime="20190504 09:54:32.657" starttime="20190504 09:54:32.655"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${y_axis_exceed_expected_error}</arg>
<arg>Write Bare In Position</arg>
<arg>${write_text}</arg>
<arg>25</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20190504 09:54:32.657" level="TRACE">Arguments: [ 'You have exceeded the y-axis limit of the mainframe screen' | 'Write Bare In Position' | '${write_text}' | '25' | '10' ]</msg>
<kw name="Write Bare In Position" library="Mainframe3270">
<doc>Send only the string to the screen at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>${write_text}</arg>
<arg>25</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20190504 09:54:32.658" level="TRACE">Arguments: [ 'TEST' | '25' | '10' ]</msg>
<msg timestamp="20190504 09:54:32.658" level="FAIL">You have exceeded the y-axis limit of the mainframe screen</msg>
<msg timestamp="20190504 09:54:32.658" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 268, in write_bare_in_position
    self._write(txt, ypos=ypos, xpos=xpos)
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 273, in _write
    self._check_limits(int(ypos), int(xpos))
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 554, in _check_limits
    raise Exception('You have exceeded the y-axis limit of the mainframe screen')</msg>
<status status="FAIL" endtime="20190504 09:54:32.658" starttime="20190504 09:54:32.658"></status>
</kw>
<msg timestamp="20190504 09:54:32.658" level="TRACE">Return: 'You have exceeded the y-axis limit of the mainframe screen'</msg>
<status status="PASS" endtime="20190504 09:54:32.659" starttime="20190504 09:54:32.657"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:32.659" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:32.659" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.659" starttime="20190504 09:54:32.659"></status>
</kw>
<tags>
<tag>KET</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:32.660" critical="yes" starttime="20190504 09:54:32.654"></status>
</test>
<test id="s1-s1-t5" name="Test Page Should Contain String">
<kw name="Verify String Not Found" library="pub400_resources">
<arguments>
<arg>Page Should Contain String</arg>
<arg>${welcome_title_wrong_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.662" level="TRACE">Arguments: [ ${keyword}='Page Should Contain String' | ${string}='WELCOME TO PUB400.COM * YOUR PUBLIC IBM I SERVER' | ${ignore_case}=False ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${string}" was not found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.663" level="TRACE">Arguments: [ 'The string "WELCOME TO PUB400.COM * YOUR PUBLIC IBM I SERVER" was not found' ]</msg>
<msg timestamp="20190504 09:54:32.663" level="TRACE">Return: 'The string "WELCOME TO PUB400.COM * YOUR PUBLIC IBM I SERVER" was not found'</msg>
<msg timestamp="20190504 09:54:32.663" level="INFO">${expected_error} = The string "WELCOME TO PUB400.COM * YOUR PUBLIC IBM I SERVER" was not found</msg>
<status status="PASS" endtime="20190504 09:54:32.663" starttime="20190504 09:54:32.663"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.664" level="TRACE">Arguments: [ 'The string "WELCOME TO PUB400.COM * YOUR PUBLIC IBM I SERVER" was not found' | 'Page Should Contain String' | '${string}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>${string}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.664" level="TRACE">Arguments: [ 'WELCOME TO PUB400.COM * YOUR PUBLIC IBM I SERVER' | ignore_case=False ]</msg>
<msg timestamp="20190504 09:54:32.669" level="FAIL">The string "WELCOME TO PUB400.COM * YOUR PUBLIC IBM I SERVER" was not found</msg>
<msg timestamp="20190504 09:54:32.669" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 325, in page_should_contain_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.669" starttime="20190504 09:54:32.664"></status>
</kw>
<msg timestamp="20190504 09:54:32.670" level="TRACE">Return: 'The string "WELCOME TO PUB400.COM * YOUR PUBLIC IBM I SERVER" was not found'</msg>
<status status="PASS" endtime="20190504 09:54:32.670" starttime="20190504 09:54:32.663"></status>
</kw>
<msg timestamp="20190504 09:54:32.670" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.670" starttime="20190504 09:54:32.662"></status>
</kw>
<kw name="Verify String Not Found" library="pub400_resources">
<arguments>
<arg>Page Should Contain String</arg>
<arg>${string_not_existant}</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.672" level="TRACE">Arguments: [ ${keyword}='Page Should Contain String' | ${string}='WRONGSTRING' | ${ignore_case}=True ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${string}" was not found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.672" level="TRACE">Arguments: [ 'The string "WRONGSTRING" was not found' ]</msg>
<msg timestamp="20190504 09:54:32.672" level="TRACE">Return: 'The string "WRONGSTRING" was not found'</msg>
<msg timestamp="20190504 09:54:32.672" level="INFO">${expected_error} = The string "WRONGSTRING" was not found</msg>
<status status="PASS" endtime="20190504 09:54:32.672" starttime="20190504 09:54:32.672"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.673" level="TRACE">Arguments: [ 'The string "WRONGSTRING" was not found' | 'Page Should Contain String' | '${string}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>${string}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.674" level="TRACE">Arguments: [ 'WRONGSTRING' | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:32.679" level="FAIL">The string "WRONGSTRING" was not found</msg>
<msg timestamp="20190504 09:54:32.679" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 325, in page_should_contain_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.679" starttime="20190504 09:54:32.673"></status>
</kw>
<msg timestamp="20190504 09:54:32.680" level="TRACE">Return: 'The string "WRONGSTRING" was not found'</msg>
<status status="PASS" endtime="20190504 09:54:32.680" starttime="20190504 09:54:32.673"></status>
</kw>
<msg timestamp="20190504 09:54:32.680" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.680" starttime="20190504 09:54:32.671"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:32.681" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:32.681" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.681" starttime="20190504 09:54:32.681"></status>
</kw>
<tags>
<tag>KET</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:32.682" critical="yes" starttime="20190504 09:54:32.661"></status>
</test>
<test id="s1-s1-t6" name="Test Page Should Contain All Strings">
<kw name="Verify String Not Found In List" library="pub400_resources">
<arguments>
<arg>Page Should Contain All Strings</arg>
<arg>${list_strings_wrong_case_on_the_first}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20190504 09:54:32.685" level="TRACE">Arguments: [ ${keyword}='Page Should Contain All Strings' | ${string_list}=['SERVER NAME', 'Subsystem', 'Display name'] | ${string_position}='1' | ${ignore_case}=False ]</msg>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${ignore_case}==${False}</arg>
<arg>${string_list[${${string_position}-1}]}</arg>
<arg>${string_list[${${string_position}-1}].lower()}</arg>
</arguments>
<assign>
<var>${not_found_string}</var>
</assign>
<msg timestamp="20190504 09:54:32.686" level="TRACE">Arguments: [ 'False==False' | '${string_list[${${string_position}-1}]}' | '${string_list[${${string_position}-1}].lower()}' ]</msg>
<msg timestamp="20190504 09:54:32.686" level="TRACE">Return: 'SERVER NAME'</msg>
<msg timestamp="20190504 09:54:32.686" level="INFO">${not_found_string} = SERVER NAME</msg>
<status status="PASS" endtime="20190504 09:54:32.686" starttime="20190504 09:54:32.685"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${not_found_string}" was not found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.687" level="TRACE">Arguments: [ 'The string "SERVER NAME" was not found' ]</msg>
<msg timestamp="20190504 09:54:32.687" level="TRACE">Return: 'The string "SERVER NAME" was not found'</msg>
<msg timestamp="20190504 09:54:32.687" level="INFO">${expected_error} = The string "SERVER NAME" was not found</msg>
<status status="PASS" endtime="20190504 09:54:32.687" starttime="20190504 09:54:32.686"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.687" level="TRACE">Arguments: [ 'The string "SERVER NAME" was not found' | 'Page Should Contain All Strings' | '${string_list}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Contain All Strings" library="Mainframe3270">
<doc>Search if all of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.688" level="TRACE">Arguments: [ ['SERVER NAME', 'Subsystem', 'Display name'] | ignore_case=False ]</msg>
<msg timestamp="20190504 09:54:32.693" level="FAIL">The string "SERVER NAME" was not found</msg>
<msg timestamp="20190504 09:54:32.693" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 389, in page_should_contain_all_strings
    self._compare_all_list_with_screen_text(list_string, ignore_case, error_message, should_match=True)
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 547, in _compare_all_list_with_screen_text
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.693" starttime="20190504 09:54:32.688"></status>
</kw>
<msg timestamp="20190504 09:54:32.694" level="TRACE">Return: 'The string "SERVER NAME" was not found'</msg>
<status status="PASS" endtime="20190504 09:54:32.694" starttime="20190504 09:54:32.687"></status>
</kw>
<msg timestamp="20190504 09:54:32.694" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.694" starttime="20190504 09:54:32.684"></status>
</kw>
<kw name="Verify String Not Found In List" library="pub400_resources">
<arguments>
<arg>Page Should Contain All Strings</arg>
<arg>${list_strings_wrong_case_on_the_second}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20190504 09:54:32.695" level="TRACE">Arguments: [ ${keyword}='Page Should Contain All Strings' | ${string_list}=['Server name', 'SUBSYSTEM', 'Display name'] | ${string_position}='2' | ${ignore_case}=False ]</msg>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${ignore_case}==${False}</arg>
<arg>${string_list[${${string_position}-1}]}</arg>
<arg>${string_list[${${string_position}-1}].lower()}</arg>
</arguments>
<assign>
<var>${not_found_string}</var>
</assign>
<msg timestamp="20190504 09:54:32.696" level="TRACE">Arguments: [ 'False==False' | '${string_list[${${string_position}-1}]}' | '${string_list[${${string_position}-1}].lower()}' ]</msg>
<msg timestamp="20190504 09:54:32.696" level="TRACE">Return: 'SUBSYSTEM'</msg>
<msg timestamp="20190504 09:54:32.696" level="INFO">${not_found_string} = SUBSYSTEM</msg>
<status status="PASS" endtime="20190504 09:54:32.697" starttime="20190504 09:54:32.696"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${not_found_string}" was not found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.697" level="TRACE">Arguments: [ 'The string "SUBSYSTEM" was not found' ]</msg>
<msg timestamp="20190504 09:54:32.697" level="TRACE">Return: 'The string "SUBSYSTEM" was not found'</msg>
<msg timestamp="20190504 09:54:32.697" level="INFO">${expected_error} = The string "SUBSYSTEM" was not found</msg>
<status status="PASS" endtime="20190504 09:54:32.697" starttime="20190504 09:54:32.697"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.698" level="TRACE">Arguments: [ 'The string "SUBSYSTEM" was not found' | 'Page Should Contain All Strings' | '${string_list}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Contain All Strings" library="Mainframe3270">
<doc>Search if all of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.698" level="TRACE">Arguments: [ ['Server name', 'SUBSYSTEM', 'Display name'] | ignore_case=False ]</msg>
<msg timestamp="20190504 09:54:32.704" level="FAIL">The string "SUBSYSTEM" was not found</msg>
<msg timestamp="20190504 09:54:32.704" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 389, in page_should_contain_all_strings
    self._compare_all_list_with_screen_text(list_string, ignore_case, error_message, should_match=True)
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 547, in _compare_all_list_with_screen_text
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.704" starttime="20190504 09:54:32.698"></status>
</kw>
<msg timestamp="20190504 09:54:32.704" level="TRACE">Return: 'The string "SUBSYSTEM" was not found'</msg>
<status status="PASS" endtime="20190504 09:54:32.704" starttime="20190504 09:54:32.697"></status>
</kw>
<msg timestamp="20190504 09:54:32.705" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.705" starttime="20190504 09:54:32.695"></status>
</kw>
<kw name="Verify String Not Found In List" library="pub400_resources">
<arguments>
<arg>Page Should Contain All Strings</arg>
<arg>${list_strings_wrong_case_on_the_third}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20190504 09:54:32.706" level="TRACE">Arguments: [ ${keyword}='Page Should Contain All Strings' | ${string_list}=['Server name', 'Subsystem', 'DISPLAY NAME'] | ${string_position}='3' | ${ignore_case}=False ]</msg>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${ignore_case}==${False}</arg>
<arg>${string_list[${${string_position}-1}]}</arg>
<arg>${string_list[${${string_position}-1}].lower()}</arg>
</arguments>
<assign>
<var>${not_found_string}</var>
</assign>
<msg timestamp="20190504 09:54:32.707" level="TRACE">Arguments: [ 'False==False' | '${string_list[${${string_position}-1}]}' | '${string_list[${${string_position}-1}].lower()}' ]</msg>
<msg timestamp="20190504 09:54:32.707" level="TRACE">Return: 'DISPLAY NAME'</msg>
<msg timestamp="20190504 09:54:32.708" level="INFO">${not_found_string} = DISPLAY NAME</msg>
<status status="PASS" endtime="20190504 09:54:32.708" starttime="20190504 09:54:32.707"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${not_found_string}" was not found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.708" level="TRACE">Arguments: [ 'The string "DISPLAY NAME" was not found' ]</msg>
<msg timestamp="20190504 09:54:32.708" level="TRACE">Return: 'The string "DISPLAY NAME" was not found'</msg>
<msg timestamp="20190504 09:54:32.708" level="INFO">${expected_error} = The string "DISPLAY NAME" was not found</msg>
<status status="PASS" endtime="20190504 09:54:32.708" starttime="20190504 09:54:32.708"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.709" level="TRACE">Arguments: [ 'The string "DISPLAY NAME" was not found' | 'Page Should Contain All Strings' | '${string_list}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Contain All Strings" library="Mainframe3270">
<doc>Search if all of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.709" level="TRACE">Arguments: [ ['Server name', 'Subsystem', 'DISPLAY NAME'] | ignore_case=False ]</msg>
<msg timestamp="20190504 09:54:32.715" level="FAIL">The string "DISPLAY NAME" was not found</msg>
<msg timestamp="20190504 09:54:32.715" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 389, in page_should_contain_all_strings
    self._compare_all_list_with_screen_text(list_string, ignore_case, error_message, should_match=True)
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 547, in _compare_all_list_with_screen_text
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.715" starttime="20190504 09:54:32.709"></status>
</kw>
<msg timestamp="20190504 09:54:32.716" level="TRACE">Return: 'The string "DISPLAY NAME" was not found'</msg>
<status status="PASS" endtime="20190504 09:54:32.716" starttime="20190504 09:54:32.708"></status>
</kw>
<msg timestamp="20190504 09:54:32.716" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.716" starttime="20190504 09:54:32.706"></status>
</kw>
<kw name="Verify String Not Found In List" library="pub400_resources">
<arguments>
<arg>Page Should Contain All Strings</arg>
<arg>${list_strings_wrong_on_the_first}</arg>
<arg>1</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.718" level="TRACE">Arguments: [ ${keyword}='Page Should Contain All Strings' | ${string_list}=['WRONGSTRING', 'Subsystem', 'Display name'] | ${string_position}='1' | ${ignore_case}=True ]</msg>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${ignore_case}==${False}</arg>
<arg>${string_list[${${string_position}-1}]}</arg>
<arg>${string_list[${${string_position}-1}].lower()}</arg>
</arguments>
<assign>
<var>${not_found_string}</var>
</assign>
<msg timestamp="20190504 09:54:32.718" level="TRACE">Arguments: [ 'True==False' | '${string_list[${${string_position}-1}]}' | '${string_list[${${string_position}-1}].lower()}' ]</msg>
<msg timestamp="20190504 09:54:32.719" level="TRACE">Return: 'wrongstring'</msg>
<msg timestamp="20190504 09:54:32.719" level="INFO">${not_found_string} = wrongstring</msg>
<status status="PASS" endtime="20190504 09:54:32.719" starttime="20190504 09:54:32.718"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${not_found_string}" was not found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.719" level="TRACE">Arguments: [ 'The string "wrongstring" was not found' ]</msg>
<msg timestamp="20190504 09:54:32.720" level="TRACE">Return: 'The string "wrongstring" was not found'</msg>
<msg timestamp="20190504 09:54:32.720" level="INFO">${expected_error} = The string "wrongstring" was not found</msg>
<status status="PASS" endtime="20190504 09:54:32.720" starttime="20190504 09:54:32.719"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.720" level="TRACE">Arguments: [ 'The string "wrongstring" was not found' | 'Page Should Contain All Strings' | '${string_list}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Contain All Strings" library="Mainframe3270">
<doc>Search if all of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.721" level="TRACE">Arguments: [ ['WRONGSTRING', 'Subsystem', 'Display name'] | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:32.726" level="FAIL">The string "wrongstring" was not found</msg>
<msg timestamp="20190504 09:54:32.726" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 389, in page_should_contain_all_strings
    self._compare_all_list_with_screen_text(list_string, ignore_case, error_message, should_match=True)
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 547, in _compare_all_list_with_screen_text
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.726" starttime="20190504 09:54:32.720"></status>
</kw>
<msg timestamp="20190504 09:54:32.727" level="TRACE">Return: 'The string "wrongstring" was not found'</msg>
<status status="PASS" endtime="20190504 09:54:32.727" starttime="20190504 09:54:32.720"></status>
</kw>
<msg timestamp="20190504 09:54:32.727" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.727" starttime="20190504 09:54:32.717"></status>
</kw>
<kw name="Verify String Not Found In List" library="pub400_resources">
<arguments>
<arg>Page Should Contain All Strings</arg>
<arg>${list_strings_wrong_on_the_second}</arg>
<arg>2</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.728" level="TRACE">Arguments: [ ${keyword}='Page Should Contain All Strings' | ${string_list}=['Server name', 'WRONGSTRING', 'Display name'] | ${string_position}='2' | ${ignore_case}=True ]</msg>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${ignore_case}==${False}</arg>
<arg>${string_list[${${string_position}-1}]}</arg>
<arg>${string_list[${${string_position}-1}].lower()}</arg>
</arguments>
<assign>
<var>${not_found_string}</var>
</assign>
<msg timestamp="20190504 09:54:32.729" level="TRACE">Arguments: [ 'True==False' | '${string_list[${${string_position}-1}]}' | '${string_list[${${string_position}-1}].lower()}' ]</msg>
<msg timestamp="20190504 09:54:32.730" level="TRACE">Return: 'wrongstring'</msg>
<msg timestamp="20190504 09:54:32.730" level="INFO">${not_found_string} = wrongstring</msg>
<status status="PASS" endtime="20190504 09:54:32.730" starttime="20190504 09:54:32.729"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${not_found_string}" was not found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.731" level="TRACE">Arguments: [ 'The string "wrongstring" was not found' ]</msg>
<msg timestamp="20190504 09:54:32.731" level="TRACE">Return: 'The string "wrongstring" was not found'</msg>
<msg timestamp="20190504 09:54:32.731" level="INFO">${expected_error} = The string "wrongstring" was not found</msg>
<status status="PASS" endtime="20190504 09:54:32.731" starttime="20190504 09:54:32.731"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.732" level="TRACE">Arguments: [ 'The string "wrongstring" was not found' | 'Page Should Contain All Strings' | '${string_list}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Contain All Strings" library="Mainframe3270">
<doc>Search if all of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.732" level="TRACE">Arguments: [ ['Server name', 'WRONGSTRING', 'Display name'] | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:32.738" level="FAIL">The string "wrongstring" was not found</msg>
<msg timestamp="20190504 09:54:32.738" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 389, in page_should_contain_all_strings
    self._compare_all_list_with_screen_text(list_string, ignore_case, error_message, should_match=True)
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 547, in _compare_all_list_with_screen_text
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.738" starttime="20190504 09:54:32.732"></status>
</kw>
<msg timestamp="20190504 09:54:32.738" level="TRACE">Return: 'The string "wrongstring" was not found'</msg>
<status status="PASS" endtime="20190504 09:54:32.738" starttime="20190504 09:54:32.731"></status>
</kw>
<msg timestamp="20190504 09:54:32.738" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.738" starttime="20190504 09:54:32.728"></status>
</kw>
<kw name="Verify String Not Found In List" library="pub400_resources">
<arguments>
<arg>Page Should Contain All Strings</arg>
<arg>${list_strings_wrong_on_the_third}</arg>
<arg>3</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.740" level="TRACE">Arguments: [ ${keyword}='Page Should Contain All Strings' | ${string_list}=['Server name', 'Subsystem', 'WRONGSTRING'] | ${string_position}='3' | ${ignore_case}=True ]</msg>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${ignore_case}==${False}</arg>
<arg>${string_list[${${string_position}-1}]}</arg>
<arg>${string_list[${${string_position}-1}].lower()}</arg>
</arguments>
<assign>
<var>${not_found_string}</var>
</assign>
<msg timestamp="20190504 09:54:32.740" level="TRACE">Arguments: [ 'True==False' | '${string_list[${${string_position}-1}]}' | '${string_list[${${string_position}-1}].lower()}' ]</msg>
<msg timestamp="20190504 09:54:32.741" level="TRACE">Return: 'wrongstring'</msg>
<msg timestamp="20190504 09:54:32.741" level="INFO">${not_found_string} = wrongstring</msg>
<status status="PASS" endtime="20190504 09:54:32.741" starttime="20190504 09:54:32.740"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${not_found_string}" was not found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.742" level="TRACE">Arguments: [ 'The string "wrongstring" was not found' ]</msg>
<msg timestamp="20190504 09:54:32.742" level="TRACE">Return: 'The string "wrongstring" was not found'</msg>
<msg timestamp="20190504 09:54:32.742" level="INFO">${expected_error} = The string "wrongstring" was not found</msg>
<status status="PASS" endtime="20190504 09:54:32.742" starttime="20190504 09:54:32.741"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.742" level="TRACE">Arguments: [ 'The string "wrongstring" was not found' | 'Page Should Contain All Strings' | '${string_list}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Contain All Strings" library="Mainframe3270">
<doc>Search if all of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.743" level="TRACE">Arguments: [ ['Server name', 'Subsystem', 'WRONGSTRING'] | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:32.749" level="FAIL">The string "wrongstring" was not found</msg>
<msg timestamp="20190504 09:54:32.749" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 389, in page_should_contain_all_strings
    self._compare_all_list_with_screen_text(list_string, ignore_case, error_message, should_match=True)
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 547, in _compare_all_list_with_screen_text
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.749" starttime="20190504 09:54:32.743"></status>
</kw>
<msg timestamp="20190504 09:54:32.749" level="TRACE">Return: 'The string "wrongstring" was not found'</msg>
<status status="PASS" endtime="20190504 09:54:32.749" starttime="20190504 09:54:32.742"></status>
</kw>
<msg timestamp="20190504 09:54:32.749" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.749" starttime="20190504 09:54:32.739"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:32.751" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:32.751" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.751" starttime="20190504 09:54:32.750"></status>
</kw>
<tags>
<tag>KET</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:32.751" critical="yes" starttime="20190504 09:54:32.683"></status>
</test>
<test id="s1-s1-t7" name="Test Page Should Contain Any String">
<kw name="Verify List Not Found" library="pub400_resources">
<arguments>
<arg>Page Should Contain Any String</arg>
<arg>${list_strings_all_wrong_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.754" level="TRACE">Arguments: [ ${keyword}='Page Should Contain Any String' | ${list}=['SERVER NAME', 'SUBSYSTEM', 'DISPLAY NAME'] | ${ignore_case}=False ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The strings "${list}" was not found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.755" level="TRACE">Arguments: [ 'The strings "[u\'SERVER NAME\', u\'SUBSYSTEM\', u\'DISPLAY NAME\']" was not found' ]</msg>
<msg timestamp="20190504 09:54:32.755" level="TRACE">Return: 'The strings "[u\'SERVER NAME\', u\'SUBSYSTEM\', u\'DISPLAY NAME\']" was not found'</msg>
<msg timestamp="20190504 09:54:32.755" level="INFO">${expected_error} = The strings "[u'SERVER NAME', u'SUBSYSTEM', u'DISPLAY NAME']" was not found</msg>
<status status="PASS" endtime="20190504 09:54:32.755" starttime="20190504 09:54:32.755"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>EQUALS: ${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.756" level="TRACE">Arguments: [ 'EQUALS: The strings "[u\'SERVER NAME\', u\'SUBSYSTEM\', u\'DISPLAY NAME\']" was not found' | 'Page Should Contain Any String' | '${list}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Contain Any String" library="Mainframe3270">
<doc>Search if one of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.756" level="TRACE">Arguments: [ ['SERVER NAME', 'SUBSYSTEM', 'DISPLAY NAME'] | ignore_case=False ]</msg>
<msg timestamp="20190504 09:54:32.770" level="FAIL">The strings "[u'SERVER NAME', u'SUBSYSTEM', u'DISPLAY NAME']" was not found</msg>
<msg timestamp="20190504 09:54:32.770" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 362, in page_should_contain_any_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.770" starttime="20190504 09:54:32.756"></status>
</kw>
<msg timestamp="20190504 09:54:32.770" level="TRACE">Return: 'The strings "[u\'SERVER NAME\', u\'SUBSYSTEM\', u\'DISPLAY NAME\']" was not found'</msg>
<status status="PASS" endtime="20190504 09:54:32.770" starttime="20190504 09:54:32.755"></status>
</kw>
<msg timestamp="20190504 09:54:32.770" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.770" starttime="20190504 09:54:32.754"></status>
</kw>
<kw name="Verify List Not Found" library="pub400_resources">
<arguments>
<arg>Page Should Contain Any String</arg>
<arg>${list_strings_not_existants_ignore_case}</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.772" level="TRACE">Arguments: [ ${keyword}='Page Should Contain Any String' | ${list}=['WRONGSTRING', 'WRONGSTRING', 'WRONGSTRING'] | ${ignore_case}=True ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The strings "${list}" was not found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.773" level="TRACE">Arguments: [ 'The strings "[u\'WRONGSTRING\', u\'WRONGSTRING\', u\'WRONGSTRING\']" was not found' ]</msg>
<msg timestamp="20190504 09:54:32.773" level="TRACE">Return: 'The strings "[u\'WRONGSTRING\', u\'WRONGSTRING\', u\'WRONGSTRING\']" was not found'</msg>
<msg timestamp="20190504 09:54:32.773" level="INFO">${expected_error} = The strings "[u'WRONGSTRING', u'WRONGSTRING', u'WRONGSTRING']" was not found</msg>
<status status="PASS" endtime="20190504 09:54:32.773" starttime="20190504 09:54:32.772"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>EQUALS: ${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.773" level="TRACE">Arguments: [ 'EQUALS: The strings "[u\'WRONGSTRING\', u\'WRONGSTRING\', u\'WRONGSTRING\']" was not found' | 'Page Should Contain Any String' | '${list}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Contain Any String" library="Mainframe3270">
<doc>Search if one of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.774" level="TRACE">Arguments: [ ['WRONGSTRING', 'WRONGSTRING', 'WRONGSTRING'] | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:32.788" level="FAIL">The strings "[u'WRONGSTRING', u'WRONGSTRING', u'WRONGSTRING']" was not found</msg>
<msg timestamp="20190504 09:54:32.789" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 362, in page_should_contain_any_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.789" starttime="20190504 09:54:32.774"></status>
</kw>
<msg timestamp="20190504 09:54:32.789" level="TRACE">Return: 'The strings "[u\'WRONGSTRING\', u\'WRONGSTRING\', u\'WRONGSTRING\']" was not found'</msg>
<status status="PASS" endtime="20190504 09:54:32.789" starttime="20190504 09:54:32.773"></status>
</kw>
<msg timestamp="20190504 09:54:32.789" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.789" starttime="20190504 09:54:32.771"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:32.790" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:32.791" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.791" starttime="20190504 09:54:32.790"></status>
</kw>
<tags>
<tag>KET</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:32.791" critical="yes" starttime="20190504 09:54:32.753"></status>
</test>
<test id="s1-s1-t8" name="Test Page Should Contain Match">
<kw name="Verify Pattern Not Found" library="pub400_resources">
<arguments>
<arg>Page Should Contain Match</arg>
<arg>${text_match_wrong_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.795" level="TRACE">Arguments: [ ${keyword}='Page Should Contain Match' | ${string}='*pub???.com*' | ${ignore_case}=False ]</msg>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${ignore_case}==${False}</arg>
<arg>${string}</arg>
<arg>${string.lower()}</arg>
</arguments>
<assign>
<var>${not_found_string}</var>
</assign>
<msg timestamp="20190504 09:54:32.795" level="TRACE">Arguments: [ 'False==False' | '${string}' | '${string.lower()}' ]</msg>
<msg timestamp="20190504 09:54:32.796" level="TRACE">Return: '*pub???.com*'</msg>
<msg timestamp="20190504 09:54:32.796" level="INFO">${not_found_string} = *pub???.com*</msg>
<status status="PASS" endtime="20190504 09:54:32.796" starttime="20190504 09:54:32.795"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>No matches found for "${not_found_string}" pattern</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.796" level="TRACE">Arguments: [ 'No matches found for "*pub???.com*" pattern' ]</msg>
<msg timestamp="20190504 09:54:32.796" level="TRACE">Return: 'No matches found for "*pub???.com*" pattern'</msg>
<msg timestamp="20190504 09:54:32.796" level="INFO">${expected_error} = No matches found for "*pub???.com*" pattern</msg>
<status status="PASS" endtime="20190504 09:54:32.796" starttime="20190504 09:54:32.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ignore_case}</arg>
<arg>Run Keyword And Expect Error</arg>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string}</arg>
<arg>ignore_case=${ignore_case}</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Expect Error</arg>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.797" level="TRACE">Arguments: [ False | 'Run Keyword And Expect Error' | '${expected_error}' | '${keyword}' | '${string}' | 'ignore_case=${ignore_case}' | 'ELSE' | 'Run Keyword And Expect Error' | '${expected_error}' | '${keyword}' | '${string}' ]</msg>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.798" level="TRACE">Arguments: [ 'No matches found for "*pub???.com*" pattern' | 'Page Should Contain Match' | '${string}' ]</msg>
<kw name="Page Should Contain Match" library="Mainframe3270">
<doc>Fails unless the given string matches the given pattern.</doc>
<arguments>
<arg>${string}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.798" level="TRACE">Arguments: [ '*pub???.com*' ]</msg>
<msg timestamp="20190504 09:54:32.804" level="FAIL">No matches found for "*pub???.com*" pattern</msg>
<msg timestamp="20190504 09:54:32.804" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 492, in page_should_contain_match
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.805" starttime="20190504 09:54:32.798"></status>
</kw>
<msg timestamp="20190504 09:54:32.806" level="TRACE">Return: 'No matches found for "*pub???.com*" pattern'</msg>
<status status="PASS" endtime="20190504 09:54:32.806" starttime="20190504 09:54:32.797"></status>
</kw>
<msg timestamp="20190504 09:54:32.806" level="TRACE">Return: 'No matches found for "*pub???.com*" pattern'</msg>
<status status="PASS" endtime="20190504 09:54:32.806" starttime="20190504 09:54:32.797"></status>
</kw>
<msg timestamp="20190504 09:54:32.806" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.806" starttime="20190504 09:54:32.794"></status>
</kw>
<kw name="Verify Pattern Not Found" library="pub400_resources">
<arguments>
<arg>Page Should Contain Match</arg>
<arg>${string_not_existant}</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.808" level="TRACE">Arguments: [ ${keyword}='Page Should Contain Match' | ${string}='WRONGSTRING' | ${ignore_case}=True ]</msg>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${ignore_case}==${False}</arg>
<arg>${string}</arg>
<arg>${string.lower()}</arg>
</arguments>
<assign>
<var>${not_found_string}</var>
</assign>
<msg timestamp="20190504 09:54:32.808" level="TRACE">Arguments: [ 'True==False' | '${string}' | '${string.lower()}' ]</msg>
<msg timestamp="20190504 09:54:32.809" level="TRACE">Return: 'wrongstring'</msg>
<msg timestamp="20190504 09:54:32.809" level="INFO">${not_found_string} = wrongstring</msg>
<status status="PASS" endtime="20190504 09:54:32.809" starttime="20190504 09:54:32.808"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>No matches found for "${not_found_string}" pattern</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.809" level="TRACE">Arguments: [ 'No matches found for "wrongstring" pattern' ]</msg>
<msg timestamp="20190504 09:54:32.809" level="TRACE">Return: 'No matches found for "wrongstring" pattern'</msg>
<msg timestamp="20190504 09:54:32.809" level="INFO">${expected_error} = No matches found for "wrongstring" pattern</msg>
<status status="PASS" endtime="20190504 09:54:32.809" starttime="20190504 09:54:32.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ignore_case}</arg>
<arg>Run Keyword And Expect Error</arg>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string}</arg>
<arg>ignore_case=${ignore_case}</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Expect Error</arg>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.810" level="TRACE">Arguments: [ True | 'Run Keyword And Expect Error' | '${expected_error}' | '${keyword}' | '${string}' | 'ignore_case=${ignore_case}' | 'ELSE' | 'Run Keyword And Expect Error' | '${expected_error}' | '${keyword}' | '${string}' ]</msg>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.811" level="TRACE">Arguments: [ 'No matches found for "wrongstring" pattern' | 'Page Should Contain Match' | '${string}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Contain Match" library="Mainframe3270">
<doc>Fails unless the given string matches the given pattern.</doc>
<arguments>
<arg>${string}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.811" level="TRACE">Arguments: [ 'WRONGSTRING' | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:32.817" level="FAIL">No matches found for "wrongstring" pattern</msg>
<msg timestamp="20190504 09:54:32.817" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 492, in page_should_contain_match
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.817" starttime="20190504 09:54:32.811"></status>
</kw>
<msg timestamp="20190504 09:54:32.818" level="TRACE">Return: 'No matches found for "wrongstring" pattern'</msg>
<status status="PASS" endtime="20190504 09:54:32.818" starttime="20190504 09:54:32.810"></status>
</kw>
<msg timestamp="20190504 09:54:32.818" level="TRACE">Return: 'No matches found for "wrongstring" pattern'</msg>
<status status="PASS" endtime="20190504 09:54:32.818" starttime="20190504 09:54:32.810"></status>
</kw>
<msg timestamp="20190504 09:54:32.818" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.818" starttime="20190504 09:54:32.807"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:32.819" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:32.820" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.820" starttime="20190504 09:54:32.819"></status>
</kw>
<tags>
<tag>KET</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:32.820" critical="yes" starttime="20190504 09:54:32.793"></status>
</test>
<test id="s1-s1-t9" name="Test Page Should Contain String X Times">
<kw name="Verify String Does Not Appear X Times" library="pub400_resources">
<arguments>
<arg>Page Should Contain String X Times</arg>
<arg>${text_to_count}</arg>
<arg>2</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20190504 09:54:32.824" level="TRACE">Arguments: [ ${keyword}='Page Should Contain String X Times' | ${string}='IBM' | ${wrong_number_of_times}='2' | ${right_number_of_times}='3' | ${ignore_case}=False ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${string}" was not found "${wrong_number_of_times}" times, it appears "${right_number_of_times}" times</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.825" level="TRACE">Arguments: [ 'The string "IBM" was not found "2" times, it appears "3" times' ]</msg>
<msg timestamp="20190504 09:54:32.825" level="TRACE">Return: 'The string "IBM" was not found "2" times, it appears "3" times'</msg>
<msg timestamp="20190504 09:54:32.825" level="INFO">${expected_error} = The string "IBM" was not found "2" times, it appears "3" times</msg>
<status status="PASS" endtime="20190504 09:54:32.825" starttime="20190504 09:54:32.824"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${text_to_count}</arg>
<arg>2</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.826" level="TRACE">Arguments: [ 'The string "IBM" was not found "2" times, it appears "3" times' | 'Page Should Contain String X Times' | '${text_to_count}' | '2' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Contain String X Times" library="Mainframe3270">
<doc>Search if the entered string appears the desired number of times on the mainframe screen.</doc>
<arguments>
<arg>${text_to_count}</arg>
<arg>2</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.826" level="TRACE">Arguments: [ 'IBM' | '2' | ignore_case=False ]</msg>
<msg timestamp="20190504 09:54:32.832" level="FAIL">The string "IBM" was not found "2" times, it appears "3" times</msg>
<msg timestamp="20190504 09:54:32.832" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 434, in page_should_contain_string_x_times
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.832" starttime="20190504 09:54:32.826"></status>
</kw>
<msg timestamp="20190504 09:54:32.833" level="TRACE">Return: 'The string "IBM" was not found "2" times, it appears "3" times'</msg>
<status status="PASS" endtime="20190504 09:54:32.833" starttime="20190504 09:54:32.825"></status>
</kw>
<msg timestamp="20190504 09:54:32.833" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.833" starttime="20190504 09:54:32.823"></status>
</kw>
<kw name="Verify String Does Not Appear X Times" library="pub400_resources">
<arguments>
<arg>Page Should Contain String X Times</arg>
<arg>${text_to_count_wrong_case}</arg>
<arg>2</arg>
<arg>3</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.835" level="TRACE">Arguments: [ ${keyword}='Page Should Contain String X Times' | ${string}='ibm' | ${wrong_number_of_times}='2' | ${right_number_of_times}='3' | ${ignore_case}=True ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${string}" was not found "${wrong_number_of_times}" times, it appears "${right_number_of_times}" times</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.835" level="TRACE">Arguments: [ 'The string "ibm" was not found "2" times, it appears "3" times' ]</msg>
<msg timestamp="20190504 09:54:32.835" level="TRACE">Return: 'The string "ibm" was not found "2" times, it appears "3" times'</msg>
<msg timestamp="20190504 09:54:32.836" level="INFO">${expected_error} = The string "ibm" was not found "2" times, it appears "3" times</msg>
<status status="PASS" endtime="20190504 09:54:32.836" starttime="20190504 09:54:32.835"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${text_to_count}</arg>
<arg>2</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.836" level="TRACE">Arguments: [ 'The string "ibm" was not found "2" times, it appears "3" times' | 'Page Should Contain String X Times' | '${text_to_count}' | '2' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Contain String X Times" library="Mainframe3270">
<doc>Search if the entered string appears the desired number of times on the mainframe screen.</doc>
<arguments>
<arg>${text_to_count}</arg>
<arg>2</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.837" level="TRACE">Arguments: [ 'IBM' | '2' | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:32.842" level="FAIL">The string "ibm" was not found "2" times, it appears "3" times</msg>
<msg timestamp="20190504 09:54:32.842" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 434, in page_should_contain_string_x_times
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.842" starttime="20190504 09:54:32.836"></status>
</kw>
<msg timestamp="20190504 09:54:32.843" level="TRACE">Return: 'The string "ibm" was not found "2" times, it appears "3" times'</msg>
<status status="PASS" endtime="20190504 09:54:32.843" starttime="20190504 09:54:32.836"></status>
</kw>
<msg timestamp="20190504 09:54:32.843" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.844" starttime="20190504 09:54:32.834"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:32.845" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:32.845" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.845" starttime="20190504 09:54:32.844"></status>
</kw>
<tags>
<tag>KET</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:32.845" critical="yes" starttime="20190504 09:54:32.822"></status>
</test>
<test id="s1-s1-t10" name="Test Page Should Match Regex">
<kw name="Verify Pattern Not Found" library="pub400_resources">
<arguments>
<arg>Page Should Match Regex</arg>
<arg>${invalid_regex}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.848" level="TRACE">Arguments: [ ${keyword}='Page Should Match Regex' | ${string}='USER\\d{5}' | ${ignore_case}=False ]</msg>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${ignore_case}==${False}</arg>
<arg>${string}</arg>
<arg>${string.lower()}</arg>
</arguments>
<assign>
<var>${not_found_string}</var>
</assign>
<msg timestamp="20190504 09:54:32.849" level="TRACE">Arguments: [ 'False==False' | '${string}' | '${string.lower()}' ]</msg>
<msg timestamp="20190504 09:54:32.849" level="TRACE">Return: 'USER\\d{5}'</msg>
<msg timestamp="20190504 09:54:32.849" level="INFO">${not_found_string} = USER\d{5}</msg>
<status status="PASS" endtime="20190504 09:54:32.849" starttime="20190504 09:54:32.849"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>No matches found for "${not_found_string}" pattern</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.850" level="TRACE">Arguments: [ 'No matches found for "USER\\d{5}" pattern' ]</msg>
<msg timestamp="20190504 09:54:32.850" level="TRACE">Return: 'No matches found for "USER\\d{5}" pattern'</msg>
<msg timestamp="20190504 09:54:32.850" level="INFO">${expected_error} = No matches found for "USER\d{5}" pattern</msg>
<status status="PASS" endtime="20190504 09:54:32.850" starttime="20190504 09:54:32.849"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ignore_case}</arg>
<arg>Run Keyword And Expect Error</arg>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string}</arg>
<arg>ignore_case=${ignore_case}</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Expect Error</arg>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.851" level="TRACE">Arguments: [ False | 'Run Keyword And Expect Error' | '${expected_error}' | '${keyword}' | '${string}' | 'ignore_case=${ignore_case}' | 'ELSE' | 'Run Keyword And Expect Error' | '${expected_error}' | '${keyword}' | '${string}' ]</msg>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.851" level="TRACE">Arguments: [ 'No matches found for "USER\\d{5}" pattern' | 'Page Should Match Regex' | '${string}' ]</msg>
<kw name="Page Should Match Regex" library="Mainframe3270">
<doc>Fails if string does not match pattern as a regular expression. Regular expression check is
implemented using the Python [https://docs.python.org/2/library/re.html|re module]. Python's
regular expression syntax is derived from Perl, and it is thus also very similar to the syntax used,
for example, in Java, Ruby and .NET.</doc>
<arguments>
<arg>${string}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.852" level="TRACE">Arguments: [ 'USER\\d{5}' ]</msg>
<msg timestamp="20190504 09:54:32.857" level="FAIL">No matches found for "USER\d{5}" pattern</msg>
<msg timestamp="20190504 09:54:32.858" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 448, in page_should_match_regex
    raise Exception('No matches found for "' + regex_pattern + '" pattern')</msg>
<status status="FAIL" endtime="20190504 09:54:32.858" starttime="20190504 09:54:32.851"></status>
</kw>
<msg timestamp="20190504 09:54:32.859" level="TRACE">Return: 'No matches found for "USER\\d{5}" pattern'</msg>
<status status="PASS" endtime="20190504 09:54:32.859" starttime="20190504 09:54:32.851"></status>
</kw>
<msg timestamp="20190504 09:54:32.859" level="TRACE">Return: 'No matches found for "USER\\d{5}" pattern'</msg>
<status status="PASS" endtime="20190504 09:54:32.859" starttime="20190504 09:54:32.850"></status>
</kw>
<msg timestamp="20190504 09:54:32.859" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.859" starttime="20190504 09:54:32.848"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:32.860" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:32.860" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.860" starttime="20190504 09:54:32.860"></status>
</kw>
<tags>
<tag>KET</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:32.861" critical="yes" starttime="20190504 09:54:32.847"></status>
</test>
<test id="s1-s1-t11" name="Test Page Should Not Contain String">
<kw name="Verify String Found" library="pub400_resources">
<arguments>
<arg>Page Should Not Contain String</arg>
<arg>${welcome_title_short}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.864" level="TRACE">Arguments: [ ${keyword}='Page Should Not Contain String' | ${string}='Welcome to PUB400.COM' | ${ignore_case}=False ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${string}" was found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.864" level="TRACE">Arguments: [ 'The string "Welcome to PUB400.COM" was found' ]</msg>
<msg timestamp="20190504 09:54:32.864" level="TRACE">Return: 'The string "Welcome to PUB400.COM" was found'</msg>
<msg timestamp="20190504 09:54:32.864" level="INFO">${expected_error} = The string "Welcome to PUB400.COM" was found</msg>
<status status="PASS" endtime="20190504 09:54:32.864" starttime="20190504 09:54:32.864"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.865" level="TRACE">Arguments: [ 'The string "Welcome to PUB400.COM" was found' | 'Page Should Not Contain String' | '${string}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Not Contain String" library="Mainframe3270">
<doc>Search if a given string NOT exists on the mainframe screen.</doc>
<arguments>
<arg>${string}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.866" level="TRACE">Arguments: [ 'Welcome to PUB400.COM' | ignore_case=False ]</msg>
<msg timestamp="20190504 09:54:32.866" level="FAIL">The string "Welcome to PUB400.COM" was found</msg>
<msg timestamp="20190504 09:54:32.866" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 343, in page_should_not_contain_string
    if result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.866" starttime="20190504 09:54:32.865"></status>
</kw>
<msg timestamp="20190504 09:54:32.867" level="TRACE">Return: 'The string "Welcome to PUB400.COM" was found'</msg>
<status status="PASS" endtime="20190504 09:54:32.867" starttime="20190504 09:54:32.865"></status>
</kw>
<msg timestamp="20190504 09:54:32.867" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.867" starttime="20190504 09:54:32.863"></status>
</kw>
<kw name="Verify String Found" library="pub400_resources">
<arguments>
<arg>Page Should Not Contain String</arg>
<arg>${welcome_title_short_wrong_case}</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.868" level="TRACE">Arguments: [ ${keyword}='Page Should Not Contain String' | ${string}='WELCOME TO PUB400.COM' | ${ignore_case}=True ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${string}" was found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.869" level="TRACE">Arguments: [ 'The string "WELCOME TO PUB400.COM" was found' ]</msg>
<msg timestamp="20190504 09:54:32.869" level="TRACE">Return: 'The string "WELCOME TO PUB400.COM" was found'</msg>
<msg timestamp="20190504 09:54:32.869" level="INFO">${expected_error} = The string "WELCOME TO PUB400.COM" was found</msg>
<status status="PASS" endtime="20190504 09:54:32.869" starttime="20190504 09:54:32.869"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.870" level="TRACE">Arguments: [ 'The string "WELCOME TO PUB400.COM" was found' | 'Page Should Not Contain String' | '${string}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Not Contain String" library="Mainframe3270">
<doc>Search if a given string NOT exists on the mainframe screen.</doc>
<arguments>
<arg>${string}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.870" level="TRACE">Arguments: [ 'WELCOME TO PUB400.COM' | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:32.871" level="FAIL">The string "WELCOME TO PUB400.COM" was found</msg>
<msg timestamp="20190504 09:54:32.871" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 343, in page_should_not_contain_string
    if result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.871" starttime="20190504 09:54:32.870"></status>
</kw>
<msg timestamp="20190504 09:54:32.871" level="TRACE">Return: 'The string "WELCOME TO PUB400.COM" was found'</msg>
<status status="PASS" endtime="20190504 09:54:32.872" starttime="20190504 09:54:32.869"></status>
</kw>
<msg timestamp="20190504 09:54:32.872" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.872" starttime="20190504 09:54:32.868"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:32.873" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:32.873" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.873" starttime="20190504 09:54:32.872"></status>
</kw>
<tags>
<tag>KET</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:32.873" critical="yes" starttime="20190504 09:54:32.862"></status>
</test>
<test id="s1-s1-t12" name="Test Page Should Not Contain All Strings">
<kw name="Verify List Found" library="pub400_resources">
<arguments>
<arg>Page Should Not Contain All Strings</arg>
<arg>${list_strings_right_on_the_first}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20190504 09:54:32.876" level="TRACE">Arguments: [ ${keyword}='Page Should Not Contain All Strings' | ${string_list}=['Server name', 'WRONGSTRING', 'WRONGSTRING'] | ${string_position}='1' | ${ignore_case}=False ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${string_list[${${string_position}-1}]}" was found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.877" level="TRACE">Arguments: [ 'The string "Server name" was found' ]</msg>
<msg timestamp="20190504 09:54:32.877" level="TRACE">Return: 'The string "Server name" was found'</msg>
<msg timestamp="20190504 09:54:32.877" level="INFO">${expected_error} = The string "Server name" was found</msg>
<status status="PASS" endtime="20190504 09:54:32.877" starttime="20190504 09:54:32.876"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.878" level="TRACE">Arguments: [ 'The string "Server name" was found' | 'Page Should Not Contain All Strings' | '${string_list}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Not Contain All Strings" library="Mainframe3270">
<doc>Fails if one of the strings in a given list exists on the mainframe screen. if one of the string
are found, the keyword will raise a exception.</doc>
<arguments>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.878" level="TRACE">Arguments: [ ['Server name', 'WRONGSTRING', 'WRONGSTRING'] | ignore_case=False ]</msg>
<msg timestamp="20190504 09:54:32.879" level="FAIL">The string "Server name" was found</msg>
<msg timestamp="20190504 09:54:32.879" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 410, in page_should_not_contain_all_strings
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.879" starttime="20190504 09:54:32.878"></status>
</kw>
<msg timestamp="20190504 09:54:32.880" level="TRACE">Return: 'The string "Server name" was found'</msg>
<status status="PASS" endtime="20190504 09:54:32.880" starttime="20190504 09:54:32.877"></status>
</kw>
<msg timestamp="20190504 09:54:32.880" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.880" starttime="20190504 09:54:32.875"></status>
</kw>
<kw name="Verify List Found" library="pub400_resources">
<arguments>
<arg>Page Should Not Contain All Strings</arg>
<arg>${list_strings_right_on_the_second}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20190504 09:54:32.881" level="TRACE">Arguments: [ ${keyword}='Page Should Not Contain All Strings' | ${string_list}=['WRONGSTRING', 'Subsystem', 'WRONGSTRING'] | ${string_position}='2' | ${ignore_case}=False ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${string_list[${${string_position}-1}]}" was found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.882" level="TRACE">Arguments: [ 'The string "Subsystem" was found' ]</msg>
<msg timestamp="20190504 09:54:32.882" level="TRACE">Return: 'The string "Subsystem" was found'</msg>
<msg timestamp="20190504 09:54:32.882" level="INFO">${expected_error} = The string "Subsystem" was found</msg>
<status status="PASS" endtime="20190504 09:54:32.882" starttime="20190504 09:54:32.881"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.883" level="TRACE">Arguments: [ 'The string "Subsystem" was found' | 'Page Should Not Contain All Strings' | '${string_list}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Not Contain All Strings" library="Mainframe3270">
<doc>Fails if one of the strings in a given list exists on the mainframe screen. if one of the string
are found, the keyword will raise a exception.</doc>
<arguments>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.883" level="TRACE">Arguments: [ ['WRONGSTRING', 'Subsystem', 'WRONGSTRING'] | ignore_case=False ]</msg>
<msg timestamp="20190504 09:54:32.889" level="FAIL">The string "Subsystem" was found</msg>
<msg timestamp="20190504 09:54:32.889" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 410, in page_should_not_contain_all_strings
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.889" starttime="20190504 09:54:32.883"></status>
</kw>
<msg timestamp="20190504 09:54:32.889" level="TRACE">Return: 'The string "Subsystem" was found'</msg>
<status status="PASS" endtime="20190504 09:54:32.889" starttime="20190504 09:54:32.882"></status>
</kw>
<msg timestamp="20190504 09:54:32.890" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.890" starttime="20190504 09:54:32.881"></status>
</kw>
<kw name="Verify List Found" library="pub400_resources">
<arguments>
<arg>Page Should Not Contain All Strings</arg>
<arg>${list_strings_right_on_the_third}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20190504 09:54:32.891" level="TRACE">Arguments: [ ${keyword}='Page Should Not Contain All Strings' | ${string_list}=['WRONGSTRING', 'WRONGSTRING', 'Display name'] | ${string_position}='3' | ${ignore_case}=False ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${string_list[${${string_position}-1}]}" was found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.892" level="TRACE">Arguments: [ 'The string "Display name" was found' ]</msg>
<msg timestamp="20190504 09:54:32.892" level="TRACE">Return: 'The string "Display name" was found'</msg>
<msg timestamp="20190504 09:54:32.892" level="INFO">${expected_error} = The string "Display name" was found</msg>
<status status="PASS" endtime="20190504 09:54:32.892" starttime="20190504 09:54:32.891"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.892" level="TRACE">Arguments: [ 'The string "Display name" was found' | 'Page Should Not Contain All Strings' | '${string_list}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Not Contain All Strings" library="Mainframe3270">
<doc>Fails if one of the strings in a given list exists on the mainframe screen. if one of the string
are found, the keyword will raise a exception.</doc>
<arguments>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.893" level="TRACE">Arguments: [ ['WRONGSTRING', 'WRONGSTRING', 'Display name'] | ignore_case=False ]</msg>
<msg timestamp="20190504 09:54:32.903" level="FAIL">The string "Display name" was found</msg>
<msg timestamp="20190504 09:54:32.903" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 410, in page_should_not_contain_all_strings
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.903" starttime="20190504 09:54:32.893"></status>
</kw>
<msg timestamp="20190504 09:54:32.904" level="TRACE">Return: 'The string "Display name" was found'</msg>
<status status="PASS" endtime="20190504 09:54:32.904" starttime="20190504 09:54:32.892"></status>
</kw>
<msg timestamp="20190504 09:54:32.905" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.905" starttime="20190504 09:54:32.890"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:32.906" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:32.906" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.906" starttime="20190504 09:54:32.906"></status>
</kw>
<tags>
<tag>KET</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:32.906" critical="yes" starttime="20190504 09:54:32.875"></status>
</test>
<test id="s1-s1-t13" name="Test Page Should Not Contain Any String">
<kw name="Verify List Found" library="pub400_resources">
<arguments>
<arg>Page Should Not Contain Any String</arg>
<arg>${list_strings_right_on_the_first}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20190504 09:54:32.910" level="TRACE">Arguments: [ ${keyword}='Page Should Not Contain Any String' | ${string_list}=['Server name', 'WRONGSTRING', 'WRONGSTRING'] | ${string_position}='1' | ${ignore_case}=False ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${string_list[${${string_position}-1}]}" was found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.911" level="TRACE">Arguments: [ 'The string "Server name" was found' ]</msg>
<msg timestamp="20190504 09:54:32.911" level="TRACE">Return: 'The string "Server name" was found'</msg>
<msg timestamp="20190504 09:54:32.911" level="INFO">${expected_error} = The string "Server name" was found</msg>
<status status="PASS" endtime="20190504 09:54:32.911" starttime="20190504 09:54:32.910"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.911" level="TRACE">Arguments: [ 'The string "Server name" was found' | 'Page Should Not Contain Any String' | '${string_list}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Not Contain Any String" library="Mainframe3270">
<doc>Fails if one or more of the strings in a given list exists on the mainframe screen. if one or more of the
string are found, the keyword will raise a exception.</doc>
<arguments>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.912" level="TRACE">Arguments: [ ['Server name', 'WRONGSTRING', 'WRONGSTRING'] | ignore_case=False ]</msg>
<msg timestamp="20190504 09:54:32.913" level="FAIL">The string "Server name" was found</msg>
<msg timestamp="20190504 09:54:32.913" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 376, in page_should_not_contain_any_string
    self._compare_all_list_with_screen_text(list_string, ignore_case, error_message, should_match=False)
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 543, in _compare_all_list_with_screen_text
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.913" starttime="20190504 09:54:32.912"></status>
</kw>
<msg timestamp="20190504 09:54:32.913" level="TRACE">Return: 'The string "Server name" was found'</msg>
<status status="PASS" endtime="20190504 09:54:32.913" starttime="20190504 09:54:32.911"></status>
</kw>
<msg timestamp="20190504 09:54:32.913" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.913" starttime="20190504 09:54:32.909"></status>
</kw>
<kw name="Verify List Found" library="pub400_resources">
<arguments>
<arg>Page Should Not Contain Any String</arg>
<arg>${list_strings_right_on_the_second}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20190504 09:54:32.914" level="TRACE">Arguments: [ ${keyword}='Page Should Not Contain Any String' | ${string_list}=['WRONGSTRING', 'Subsystem', 'WRONGSTRING'] | ${string_position}='2' | ${ignore_case}=False ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${string_list[${${string_position}-1}]}" was found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.915" level="TRACE">Arguments: [ 'The string "Subsystem" was found' ]</msg>
<msg timestamp="20190504 09:54:32.915" level="TRACE">Return: 'The string "Subsystem" was found'</msg>
<msg timestamp="20190504 09:54:32.915" level="INFO">${expected_error} = The string "Subsystem" was found</msg>
<status status="PASS" endtime="20190504 09:54:32.915" starttime="20190504 09:54:32.915"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.916" level="TRACE">Arguments: [ 'The string "Subsystem" was found' | 'Page Should Not Contain Any String' | '${string_list}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Not Contain Any String" library="Mainframe3270">
<doc>Fails if one or more of the strings in a given list exists on the mainframe screen. if one or more of the
string are found, the keyword will raise a exception.</doc>
<arguments>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.916" level="TRACE">Arguments: [ ['WRONGSTRING', 'Subsystem', 'WRONGSTRING'] | ignore_case=False ]</msg>
<msg timestamp="20190504 09:54:32.922" level="FAIL">The string "Subsystem" was found</msg>
<msg timestamp="20190504 09:54:32.922" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 376, in page_should_not_contain_any_string
    self._compare_all_list_with_screen_text(list_string, ignore_case, error_message, should_match=False)
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 543, in _compare_all_list_with_screen_text
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.922" starttime="20190504 09:54:32.916"></status>
</kw>
<msg timestamp="20190504 09:54:32.922" level="TRACE">Return: 'The string "Subsystem" was found'</msg>
<status status="PASS" endtime="20190504 09:54:32.923" starttime="20190504 09:54:32.916"></status>
</kw>
<msg timestamp="20190504 09:54:32.923" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.923" starttime="20190504 09:54:32.914"></status>
</kw>
<kw name="Verify List Found" library="pub400_resources">
<arguments>
<arg>Page Should Not Contain Any String</arg>
<arg>${list_strings_right_on_the_third}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20190504 09:54:32.924" level="TRACE">Arguments: [ ${keyword}='Page Should Not Contain Any String' | ${string_list}=['WRONGSTRING', 'WRONGSTRING', 'Display name'] | ${string_position}='3' | ${ignore_case}=False ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>The string "${string_list[${${string_position}-1}]}" was found</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.925" level="TRACE">Arguments: [ 'The string "Display name" was found' ]</msg>
<msg timestamp="20190504 09:54:32.925" level="TRACE">Return: 'The string "Display name" was found'</msg>
<msg timestamp="20190504 09:54:32.925" level="INFO">${expected_error} = The string "Display name" was found</msg>
<status status="PASS" endtime="20190504 09:54:32.925" starttime="20190504 09:54:32.924"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.926" level="TRACE">Arguments: [ 'The string "Display name" was found' | 'Page Should Not Contain Any String' | '${string_list}' | 'ignore_case=${ignore_case}' ]</msg>
<kw name="Page Should Not Contain Any String" library="Mainframe3270">
<doc>Fails if one or more of the strings in a given list exists on the mainframe screen. if one or more of the
string are found, the keyword will raise a exception.</doc>
<arguments>
<arg>${string_list}</arg>
<arg>ignore_case=${ignore_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.927" level="TRACE">Arguments: [ ['WRONGSTRING', 'WRONGSTRING', 'Display name'] | ignore_case=False ]</msg>
<msg timestamp="20190504 09:54:32.937" level="FAIL">The string "Display name" was found</msg>
<msg timestamp="20190504 09:54:32.937" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 376, in page_should_not_contain_any_string
    self._compare_all_list_with_screen_text(list_string, ignore_case, error_message, should_match=False)
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 543, in _compare_all_list_with_screen_text
    raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:32.937" starttime="20190504 09:54:32.926"></status>
</kw>
<msg timestamp="20190504 09:54:32.937" level="TRACE">Return: 'The string "Display name" was found'</msg>
<status status="PASS" endtime="20190504 09:54:32.937" starttime="20190504 09:54:32.926"></status>
</kw>
<msg timestamp="20190504 09:54:32.937" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.937" starttime="20190504 09:54:32.923"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:32.939" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:32.939" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:32.939" starttime="20190504 09:54:32.938"></status>
</kw>
<tags>
<tag>KET</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:32.939" critical="yes" starttime="20190504 09:54:32.908"></status>
</test>
<test id="s1-s1-t14" name="Test Wait Until String">
<kw name="Verify Wait Until String" library="pub400_resources">
<arguments>
<arg>Wait Until String</arg>
<arg>${string_not_existant}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.943" level="TRACE">Arguments: [ ${keyword}='Wait Until String' | ${string}='WRONGSTRING' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>String "${string}" not found in 5 seconds</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:32.943" level="TRACE">Arguments: [ 'String "WRONGSTRING" not found in 5 seconds' ]</msg>
<msg timestamp="20190504 09:54:32.944" level="TRACE">Return: 'String "WRONGSTRING" not found in 5 seconds'</msg>
<msg timestamp="20190504 09:54:32.944" level="INFO">${expected_error} = String "WRONGSTRING" not found in 5 seconds</msg>
<status status="PASS" endtime="20190504 09:54:32.944" starttime="20190504 09:54:32.943"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.944" level="TRACE">Arguments: [ 'String "WRONGSTRING" not found in 5 seconds' | 'Wait Until String' | '${string}' ]</msg>
<kw name="Wait Until String" library="Mainframe3270">
<doc>Wait until a string exists on the mainframe screen to perform the next step. If the string not appear on
5 seconds the keyword will raise a exception. You can define a different timeout.</doc>
<arguments>
<arg>${string}</arg>
</arguments>
<msg timestamp="20190504 09:54:32.945" level="TRACE">Arguments: [ 'WRONGSTRING' ]</msg>
<msg timestamp="20190504 09:54:37.001" level="FAIL">String "WRONGSTRING" not found in 5 seconds</msg>
<msg timestamp="20190504 09:54:37.001" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 295, in wait_until_string
    raise Exception('String "' + txt + '" not found in ' + str(timeout) + ' seconds')</msg>
<status status="FAIL" endtime="20190504 09:54:37.001" starttime="20190504 09:54:32.945"></status>
</kw>
<msg timestamp="20190504 09:54:37.001" level="TRACE">Return: 'String "WRONGSTRING" not found in 5 seconds'</msg>
<status status="PASS" endtime="20190504 09:54:37.002" starttime="20190504 09:54:32.944"></status>
</kw>
<msg timestamp="20190504 09:54:37.002" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:37.002" starttime="20190504 09:54:32.942"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:37.003" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:37.003" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:37.003" starttime="20190504 09:54:37.003"></status>
</kw>
<tags>
<tag>KET</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:37.004" critical="yes" starttime="20190504 09:54:32.941"></status>
</test>
<test id="s1-s1-t15" name="Test Wait Until String With Timeout">
<kw name="Verify Wait Until String With Timeout" library="pub400_resources">
<arguments>
<arg>Wait Until String</arg>
<arg>${string_not_existant}</arg>
<arg>timeout=2</arg>
</arguments>
<msg timestamp="20190504 09:54:37.007" level="TRACE">Arguments: [ ${keyword}='Wait Until String' | ${string}='WRONGSTRING' | ${timeout}='2' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>String "${string}" not found in ${timeout} seconds</arg>
</arguments>
<assign>
<var>${expected_error}</var>
</assign>
<msg timestamp="20190504 09:54:37.008" level="TRACE">Arguments: [ 'String "WRONGSTRING" not found in 2 seconds' ]</msg>
<msg timestamp="20190504 09:54:37.008" level="TRACE">Return: 'String "WRONGSTRING" not found in 2 seconds'</msg>
<msg timestamp="20190504 09:54:37.009" level="INFO">${expected_error} = String "WRONGSTRING" not found in 2 seconds</msg>
<status status="PASS" endtime="20190504 09:54:37.009" starttime="20190504 09:54:37.008"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_error}</arg>
<arg>${keyword}</arg>
<arg>${string}</arg>
<arg>${timeout}</arg>
</arguments>
<msg timestamp="20190504 09:54:37.009" level="TRACE">Arguments: [ 'String "WRONGSTRING" not found in 2 seconds' | 'Wait Until String' | '${string}' | '${timeout}' ]</msg>
<kw name="Wait Until String" library="Mainframe3270">
<doc>Wait until a string exists on the mainframe screen to perform the next step. If the string not appear on
5 seconds the keyword will raise a exception. You can define a different timeout.</doc>
<arguments>
<arg>${string}</arg>
<arg>${timeout}</arg>
</arguments>
<msg timestamp="20190504 09:54:37.010" level="TRACE">Arguments: [ 'WRONGSTRING' | 2 ]</msg>
<msg timestamp="20190504 09:54:39.002" level="FAIL">String "WRONGSTRING" not found in 2 seconds</msg>
<msg timestamp="20190504 09:54:39.003" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 295, in wait_until_string
    raise Exception('String "' + txt + '" not found in ' + str(timeout) + ' seconds')</msg>
<status status="FAIL" endtime="20190504 09:54:39.003" starttime="20190504 09:54:37.010"></status>
</kw>
<msg timestamp="20190504 09:54:39.003" level="TRACE">Return: 'String "WRONGSTRING" not found in 2 seconds'</msg>
<status status="PASS" endtime="20190504 09:54:39.004" starttime="20190504 09:54:37.009"></status>
</kw>
<msg timestamp="20190504 09:54:39.004" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.004" starttime="20190504 09:54:37.007"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:39.005" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:39.006" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.006" starttime="20190504 09:54:39.005"></status>
</kw>
<tags>
<tag>KET</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:39.006" critical="yes" starttime="20190504 09:54:37.006"></status>
</test>
<status status="PASS" endtime="20190504 09:54:39.009" starttime="20190504 09:54:32.612"></status>
</suite>
<suite source="/tests/Keyword_Test.robot" id="s1-s2" name="Keyword Test">
<test id="s1-s2-t1" name="Test Open Connection">
<kw name="Wait Until String" library="Mainframe3270">
<doc>Wait until a string exists on the mainframe screen to perform the next step. If the string not appear on
5 seconds the keyword will raise a exception. You can define a different timeout.</doc>
<arguments>
<arg>${welcome_title}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.022" level="TRACE">Arguments: [ 'Welcome to PUB400.COM * your public IBM i server' ]</msg>
<msg timestamp="20190504 09:54:39.022" level="TRACE">Return: 'Welcome to PUB400.COM * your public IBM i server'</msg>
<status status="PASS" endtime="20190504 09:54:39.022" starttime="20190504 09:54:39.021"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:39.023" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:39.023" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.023" starttime="20190504 09:54:39.023"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:39.023" critical="yes" starttime="20190504 09:54:39.021"></status>
</test>
<test id="s1-s2-t2" name="Test Wait Field Detected">
<kw name="Wait Field Detected" library="Mainframe3270">
<doc>Wait until the screen is ready, the cursor has been positioned
on a modifiable field, and the keyboard is unlocked.</doc>
<msg timestamp="20190504 09:54:39.026" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:39.026" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.026" starttime="20190504 09:54:39.026"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:39.027" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:39.027" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.027" starttime="20190504 09:54:39.026"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:39.027" critical="yes" starttime="20190504 09:54:39.025"></status>
</test>
<test id="s1-s2-t3" name="Test Read">
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>1</arg>
<arg>10</arg>
<arg>48</arg>
</arguments>
<assign>
<var>${read_text}</var>
</assign>
<msg timestamp="20190504 09:54:39.029" level="TRACE">Arguments: [ '1' | '10' | '48' ]</msg>
<msg timestamp="20190504 09:54:39.030" level="TRACE">Return: b'Welcome to PUB400.COM * your public IBM i server'</msg>
<msg timestamp="20190504 09:54:39.030" level="INFO">${read_text} = Welcome to PUB400.COM * your public IBM i server</msg>
<status status="PASS" endtime="20190504 09:54:39.030" starttime="20190504 09:54:39.029"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${welcome_title}</arg>
<arg>${read_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.031" level="TRACE">Arguments: [ 'Welcome to PUB400.COM * your public IBM i server' | b'Welcome to PUB400.COM * your public IBM i server' ]</msg>
<msg timestamp="20190504 09:54:39.031" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'str'&gt;</msg>
<msg timestamp="20190504 09:54:39.031" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.031" starttime="20190504 09:54:39.030"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:39.032" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:39.032" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.032" starttime="20190504 09:54:39.032"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:39.032" critical="yes" starttime="20190504 09:54:39.028"></status>
</test>
<test id="s1-s2-t4" name="Test Page Should Contain String">
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>${welcome_title}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.034" level="TRACE">Arguments: [ 'Welcome to PUB400.COM * your public IBM i server' ]</msg>
<msg timestamp="20190504 09:54:39.035" level="INFO">The string "Welcome to PUB400.COM * your public IBM i server" was found</msg>
<msg timestamp="20190504 09:54:39.035" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.035" starttime="20190504 09:54:39.034"></status>
</kw>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>${welcome_title_wrong_case}</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.036" level="TRACE">Arguments: [ 'WELCOME TO PUB400.COM * YOUR PUBLIC IBM I SERVER' | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:39.036" level="INFO">The string "welcome to pub400.com * your public ibm i server" was found</msg>
<msg timestamp="20190504 09:54:39.036" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.036" starttime="20190504 09:54:39.035"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:39.037" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:39.037" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.037" starttime="20190504 09:54:39.037"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:39.037" critical="yes" starttime="20190504 09:54:39.033"></status>
</test>
<test id="s1-s2-t5" name="Test Page Should Contain All Strings">
<kw name="Page Should Contain All Strings" library="Mainframe3270">
<doc>Search if all of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${list_strings}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.040" level="TRACE">Arguments: [ ['Server name', 'Subsystem', 'Display name'] ]</msg>
<msg timestamp="20190504 09:54:39.042" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.042" starttime="20190504 09:54:39.039"></status>
</kw>
<kw name="Page Should Contain All Strings" library="Mainframe3270">
<doc>Search if all of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${list_strings_wrong_case}</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.042" level="TRACE">Arguments: [ ['SERVER NAME', 'SUBSYSTEM', 'DISPLAY NAME'] | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:39.044" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.044" starttime="20190504 09:54:39.042"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:39.045" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:39.045" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.045" starttime="20190504 09:54:39.045"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:39.045" critical="yes" starttime="20190504 09:54:39.039"></status>
</test>
<test id="s1-s2-t6" name="Test Page Should Contain Any String">
<kw name="Page Should Contain Any String" library="Mainframe3270">
<doc>Search if one of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${list_strings_right_in_the_first}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.048" level="TRACE">Arguments: [ ['Subsystem', 'WRONGSTRING', 'WRONGSTRING'] ]</msg>
<msg timestamp="20190504 09:54:39.049" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.049" starttime="20190504 09:54:39.048"></status>
</kw>
<kw name="Page Should Contain Any String" library="Mainframe3270">
<doc>Search if one of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${list_strings_right_on_the_second}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.049" level="TRACE">Arguments: [ ['WRONGSTRING', 'Subsystem', 'WRONGSTRING'] ]</msg>
<msg timestamp="20190504 09:54:39.054" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.055" starttime="20190504 09:54:39.049"></status>
</kw>
<kw name="Page Should Contain Any String" library="Mainframe3270">
<doc>Search if one of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${list_strings_right_on_the_third}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.055" level="TRACE">Arguments: [ ['WRONGSTRING', 'WRONGSTRING', 'Display name'] ]</msg>
<msg timestamp="20190504 09:54:39.065" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.065" starttime="20190504 09:54:39.055"></status>
</kw>
<kw name="Page Should Contain Any String" library="Mainframe3270">
<doc>Search if one of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${list_strings_right_in_the_first_wrong_case}</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.066" level="TRACE">Arguments: [ ['SUBSYSTEM', 'WRONGSTRING', 'WRONGSTRING'] | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:39.067" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.067" starttime="20190504 09:54:39.066"></status>
</kw>
<kw name="Page Should Contain Any String" library="Mainframe3270">
<doc>Search if one of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${list_strings_right_on_the_second_wrong_case}</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.068" level="TRACE">Arguments: [ ['WRONGSTRING', 'SUBSYSTEM', 'WRONGSTRING'] | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:39.073" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.073" starttime="20190504 09:54:39.067"></status>
</kw>
<kw name="Page Should Contain Any String" library="Mainframe3270">
<doc>Search if one of the strings in a given list exists on the mainframe screen.</doc>
<arguments>
<arg>${list_strings_right_on_the_third_wrong_case}</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.074" level="TRACE">Arguments: [ ['WRONGSTRING', 'WRONGSTRING', 'SUBSYSTEM'] | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:39.083" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.083" starttime="20190504 09:54:39.073"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:39.084" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:39.084" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.084" starttime="20190504 09:54:39.084"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:39.085" critical="yes" starttime="20190504 09:54:39.047"></status>
</test>
<test id="s1-s2-t7" name="Test Page Should Contain Match">
<kw name="Page Should Contain Match" library="Mainframe3270">
<doc>Fails unless the given string matches the given pattern.</doc>
<arguments>
<arg>${text_match}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.087" level="TRACE">Arguments: [ '*PUB???.COM*' ]</msg>
<msg timestamp="20190504 09:54:39.092" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.093" starttime="20190504 09:54:39.087"></status>
</kw>
<kw name="Page Should Contain Match" library="Mainframe3270">
<doc>Fails unless the given string matches the given pattern.</doc>
<arguments>
<arg>${text_match_wrong_case}</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.093" level="TRACE">Arguments: [ '*pub???.com*' | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:39.099" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.099" starttime="20190504 09:54:39.093"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:39.099" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:39.099" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.100" starttime="20190504 09:54:39.099"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:39.100" critical="yes" starttime="20190504 09:54:39.086"></status>
</test>
<test id="s1-s2-t8" name="Test Page Should Contain String X Times">
<kw name="Page Should Contain String X Times" library="Mainframe3270">
<doc>Search if the entered string appears the desired number of times on the mainframe screen.</doc>
<arguments>
<arg>${text_to_count}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20190504 09:54:39.103" level="TRACE">Arguments: [ 'IBM' | '3' ]</msg>
<msg timestamp="20190504 09:54:39.108" level="INFO">The string "IBM" was found "3" times</msg>
<msg timestamp="20190504 09:54:39.108" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.108" starttime="20190504 09:54:39.102"></status>
</kw>
<kw name="Page Should Contain String X Times" library="Mainframe3270">
<doc>Search if the entered string appears the desired number of times on the mainframe screen.</doc>
<arguments>
<arg>${text_to_count_wrong_case}</arg>
<arg>3</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.109" level="TRACE">Arguments: [ 'ibm' | '3' | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:39.114" level="INFO">The string "ibm" was found "3" times</msg>
<msg timestamp="20190504 09:54:39.114" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.114" starttime="20190504 09:54:39.108"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:39.115" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:39.115" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.115" starttime="20190504 09:54:39.115"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:39.115" critical="yes" starttime="20190504 09:54:39.101"></status>
</test>
<test id="s1-s2-t9" name="Test Page Should Match Regex">
<kw name="Page Should Match Regex" library="Mainframe3270">
<doc>Fails if string does not match pattern as a regular expression. Regular expression check is
implemented using the Python [https://docs.python.org/2/library/re.html|re module]. Python's
regular expression syntax is derived from Perl, and it is thus also very similar to the syntax used,
for example, in Java, Ruby and .NET.</doc>
<arguments>
<arg>${valid_regex}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.118" level="TRACE">Arguments: [ 'USER\\d{4}' ]</msg>
<msg timestamp="20190504 09:54:39.123" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.123" starttime="20190504 09:54:39.118"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:39.124" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:39.124" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.124" starttime="20190504 09:54:39.124"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:39.125" critical="yes" starttime="20190504 09:54:39.117"></status>
</test>
<test id="s1-s2-t10" name="Test Page Should Not Contain All Strings">
<kw name="Page Should Not Contain All Strings" library="Mainframe3270">
<doc>Fails if one of the strings in a given list exists on the mainframe screen. if one of the string
are found, the keyword will raise a exception.</doc>
<arguments>
<arg>${list_strings_not_existants}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.127" level="TRACE">Arguments: [ ['SERVER NAME', 'SUBSYSTEM', 'DISPLAY NAME'] ]</msg>
<msg timestamp="20190504 09:54:39.140" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.140" starttime="20190504 09:54:39.127"></status>
</kw>
<kw name="Page Should Not Contain All Strings" library="Mainframe3270">
<doc>Fails if one of the strings in a given list exists on the mainframe screen. if one of the string
are found, the keyword will raise a exception.</doc>
<arguments>
<arg>${list_strings_not_existants_ignore_case}</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.142" level="TRACE">Arguments: [ ['WRONGSTRING', 'WRONGSTRING', 'WRONGSTRING'] | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:39.156" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.156" starttime="20190504 09:54:39.141"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:39.157" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:39.157" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.157" starttime="20190504 09:54:39.157"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:39.158" critical="yes" starttime="20190504 09:54:39.126"></status>
</test>
<test id="s1-s2-t11" name="Test Page Should Not Contain Any String">
<kw name="Page Should Not Contain Any String" library="Mainframe3270">
<doc>Fails if one or more of the strings in a given list exists on the mainframe screen. if one or more of the
string are found, the keyword will raise a exception.</doc>
<arguments>
<arg>${list_strings_right_in_the_first_wrong_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.161" level="TRACE">Arguments: [ ['SUBSYSTEM', 'WRONGSTRING', 'WRONGSTRING'] ]</msg>
<msg timestamp="20190504 09:54:39.175" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.175" starttime="20190504 09:54:39.161"></status>
</kw>
<kw name="Page Should Not Contain Any String" library="Mainframe3270">
<doc>Fails if one or more of the strings in a given list exists on the mainframe screen. if one or more of the
string are found, the keyword will raise a exception.</doc>
<arguments>
<arg>${list_strings_right_on_the_second_wrong_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.176" level="TRACE">Arguments: [ ['WRONGSTRING', 'SUBSYSTEM', 'WRONGSTRING'] ]</msg>
<msg timestamp="20190504 09:54:39.189" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.189" starttime="20190504 09:54:39.176"></status>
</kw>
<kw name="Page Should Not Contain Any String" library="Mainframe3270">
<doc>Fails if one or more of the strings in a given list exists on the mainframe screen. if one or more of the
string are found, the keyword will raise a exception.</doc>
<arguments>
<arg>${list_strings_right_on_the_third_wrong_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.190" level="TRACE">Arguments: [ ['WRONGSTRING', 'WRONGSTRING', 'SUBSYSTEM'] ]</msg>
<msg timestamp="20190504 09:54:39.203" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.204" starttime="20190504 09:54:39.190"></status>
</kw>
<kw name="Page Should Not Contain Any String" library="Mainframe3270">
<doc>Fails if one or more of the strings in a given list exists on the mainframe screen. if one or more of the
string are found, the keyword will raise a exception.</doc>
<arguments>
<arg>${list_strings_not_existants_ignore_case}</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.205" level="TRACE">Arguments: [ ['WRONGSTRING', 'WRONGSTRING', 'WRONGSTRING'] | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:39.218" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.218" starttime="20190504 09:54:39.204"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:39.219" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:39.219" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.219" starttime="20190504 09:54:39.219"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:39.220" critical="yes" starttime="20190504 09:54:39.159"></status>
</test>
<test id="s1-s2-t12" name="Test Page Should Not Contain Match">
<kw name="Page Should Not Contain Match" library="Mainframe3270">
<doc>Fails if the given string matches the given pattern.</doc>
<arguments>
<arg>${text_not_match}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.223" level="TRACE">Arguments: [ '*PUB???400.COM*' ]</msg>
<msg timestamp="20190504 09:54:39.229" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.229" starttime="20190504 09:54:39.222"></status>
</kw>
<kw name="Page Should Not Contain Match" library="Mainframe3270">
<doc>Fails if the given string matches the given pattern.</doc>
<arguments>
<arg>${text_not_match_wrong_case}</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.230" level="TRACE">Arguments: [ '*pub???400.com*' | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:39.235" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.235" starttime="20190504 09:54:39.229"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:39.236" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:39.236" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.236" starttime="20190504 09:54:39.236"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:39.237" critical="yes" starttime="20190504 09:54:39.221"></status>
</test>
<test id="s1-s2-t13" name="Test Page Should Not Contain String">
<kw name="Page Should Not Contain String" library="Mainframe3270">
<doc>Search if a given string NOT exists on the mainframe screen.</doc>
<arguments>
<arg>${welcome_title_wrong_case}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.239" level="TRACE">Arguments: [ 'WELCOME TO PUB400.COM * YOUR PUBLIC IBM I SERVER' ]</msg>
<msg timestamp="20190504 09:54:39.244" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.244" starttime="20190504 09:54:39.239"></status>
</kw>
<kw name="Page Should Not Contain String" library="Mainframe3270">
<doc>Search if a given string NOT exists on the mainframe screen.</doc>
<arguments>
<arg>${string_not_existant}</arg>
<arg>ignore_case=${True}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.245" level="TRACE">Arguments: [ 'WRONGSTRING' | ignore_case=True ]</msg>
<msg timestamp="20190504 09:54:39.249" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.249" starttime="20190504 09:54:39.244"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:39.250" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:39.250" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.250" starttime="20190504 09:54:39.250"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:39.250" critical="yes" starttime="20190504 09:54:39.238"></status>
</test>
<test id="s1-s2-t14" name="Test Page Should Not Match Regex">
<kw name="Page Should Not Match Regex" library="Mainframe3270">
<doc>Fails if string does match pattern as a regular expression. Regular expression check is
implemented using the Python [https://docs.python.org/2/library/re.html|re module]. Python's
regular expression syntax is derived from Perl, and it is thus also very similar to the syntax used,
for example, in Java, Ruby and .NET.</doc>
<arguments>
<arg>${invalid_regex}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.253" level="TRACE">Arguments: [ 'USER\\d{5}' ]</msg>
<msg timestamp="20190504 09:54:39.258" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.258" starttime="20190504 09:54:39.253"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:39.259" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:39.259" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.259" starttime="20190504 09:54:39.259"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:39.259" critical="yes" starttime="20190504 09:54:39.252"></status>
</test>
<test id="s1-s2-t15" name="Test Set Screenshot Folder">
<kw name="Empty Directory" library="OperatingSystem">
<doc>Deletes all the content from the given directory.</doc>
<arguments>
<arg>${folder}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.262" level="TRACE">Arguments: [ '/tests/../screenshots' ]</msg>
<msg timestamp="20190504 09:54:39.262" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///screenshots"&gt;/screenshots&lt;/a&gt;'.</msg>
<msg timestamp="20190504 09:54:39.262" html="yes" level="INFO">Emptied directory '&lt;a href="file:///screenshots"&gt;/screenshots&lt;/a&gt;'.</msg>
<msg timestamp="20190504 09:54:39.262" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.262" starttime="20190504 09:54:39.262"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${new_folder}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.263" level="TRACE">Arguments: [ '/tests/../screenshots/new_folder' ]</msg>
<msg timestamp="20190504 09:54:39.263" html="yes" level="INFO">Created directory '&lt;a href="file:///screenshots/new_folder"&gt;/screenshots/new_folder&lt;/a&gt;'.</msg>
<msg timestamp="20190504 09:54:39.263" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.263" starttime="20190504 09:54:39.263"></status>
</kw>
<kw name="Set Screenshot Folder" library="Mainframe3270">
<doc>Set a folder to keep the html files generated by the `Take Screenshot` keyword.</doc>
<arguments>
<arg>${new_folder}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.264" level="TRACE">Arguments: [ '/tests/../screenshots/new_folder' ]</msg>
<msg timestamp="20190504 09:54:39.264" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.264" starttime="20190504 09:54:39.264"></status>
</kw>
<kw name="Take Screenshot" library="Mainframe3270">
<doc>Generate a screenshot of the IBM 3270 Mainframe in a html format. The
default folder is the log folder of RobotFramework, if you want change see the `Set Screenshot Folder`.</doc>
<msg timestamp="20190504 09:54:39.265" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:39.265" html="yes" level="INFO">&lt;iframe src="/tests/../screenshots/new_folder/screenshot_1556963679265.html" height="410" width="670"&gt;&lt;/iframe&gt;</msg>
<msg timestamp="20190504 09:54:39.265" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.266" starttime="20190504 09:54:39.265"></status>
</kw>
<kw name="Count Items In Directory" library="OperatingSystem">
<doc>Returns and logs the number of all items in the given directory.</doc>
<arguments>
<arg>${new_folder}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190504 09:54:39.266" level="TRACE">Arguments: [ '/tests/../screenshots/new_folder' ]</msg>
<msg timestamp="20190504 09:54:39.266" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///screenshots/new_folder"&gt;/screenshots/new_folder&lt;/a&gt;'.</msg>
<msg timestamp="20190504 09:54:39.266" level="INFO">1 item.</msg>
<msg timestamp="20190504 09:54:39.267" level="TRACE">Return: 1</msg>
<msg timestamp="20190504 09:54:39.267" level="INFO">${count} = 1</msg>
<status status="PASS" endtime="20190504 09:54:39.267" starttime="20190504 09:54:39.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20190504 09:54:39.267" level="TRACE">Arguments: [ 1 | '1' ]</msg>
<msg timestamp="20190504 09:54:39.268" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190504 09:54:39.268" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.268" starttime="20190504 09:54:39.267"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${new_folder}${/}screenshot_*.html</arg>
</arguments>
<msg timestamp="20190504 09:54:39.269" level="TRACE">Arguments: [ '/tests/../screenshots/new_folder/screenshot_*.html' ]</msg>
<msg timestamp="20190504 09:54:39.269" html="yes" level="INFO">File '&lt;a href="file:///screenshots/new_folder/screenshot_*.html"&gt;/screenshots/new_folder/screenshot_*.html&lt;/a&gt;' exists.</msg>
<msg timestamp="20190504 09:54:39.269" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.270" starttime="20190504 09:54:39.268"></status>
</kw>
<kw name="Set Screenshot Folder" library="Mainframe3270">
<doc>Set a folder to keep the html files generated by the `Take Screenshot` keyword.</doc>
<arguments>
<arg>${folder}</arg>
</arguments>
<msg timestamp="20190504 09:54:39.270" level="TRACE">Arguments: [ '/tests/../screenshots' ]</msg>
<msg timestamp="20190504 09:54:39.270" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:39.270" starttime="20190504 09:54:39.270"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190504 09:54:39.271" level="TRACE">Arguments: [ '1s' ]</msg>
<msg timestamp="20190504 09:54:40.271" level="INFO">Slept 1 second</msg>
<msg timestamp="20190504 09:54:40.272" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:40.272" starttime="20190504 09:54:39.271"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:40.274" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:40.274" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:40.274" starttime="20190504 09:54:40.273"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:40.274" critical="yes" starttime="20190504 09:54:39.261"></status>
</test>
<test id="s1-s2-t16" name="Test Take Screenshot">
<kw name="Set Screenshot Folder" library="Mainframe3270">
<doc>Set a folder to keep the html files generated by the `Take Screenshot` keyword.</doc>
<arguments>
<arg>${folder}</arg>
</arguments>
<msg timestamp="20190504 09:54:40.277" level="TRACE">Arguments: [ '/tests/../screenshots' ]</msg>
<msg timestamp="20190504 09:54:40.278" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:40.278" starttime="20190504 09:54:40.277"></status>
</kw>
<kw name="Take Screenshot" library="Mainframe3270">
<doc>Generate a screenshot of the IBM 3270 Mainframe in a html format. The
default folder is the log folder of RobotFramework, if you want change see the `Set Screenshot Folder`.</doc>
<msg timestamp="20190504 09:54:40.278" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:40.279" html="yes" level="INFO">&lt;iframe src="/tests/../screenshots/screenshot_1556963680278.html" height="410" width="670"&gt;&lt;/iframe&gt;</msg>
<msg timestamp="20190504 09:54:40.279" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:40.279" starttime="20190504 09:54:40.278"></status>
</kw>
<kw name="Count Items In Directory" library="OperatingSystem">
<doc>Returns and logs the number of all items in the given directory.</doc>
<arguments>
<arg>${folder}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190504 09:54:40.280" level="TRACE">Arguments: [ '/tests/../screenshots' ]</msg>
<msg timestamp="20190504 09:54:40.280" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///screenshots"&gt;/screenshots&lt;/a&gt;'.</msg>
<msg timestamp="20190504 09:54:40.281" level="INFO">2 items.</msg>
<msg timestamp="20190504 09:54:40.281" level="TRACE">Return: 2</msg>
<msg timestamp="20190504 09:54:40.281" level="INFO">${count} = 2</msg>
<status status="PASS" endtime="20190504 09:54:40.281" starttime="20190504 09:54:40.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${count}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20190504 09:54:40.282" level="TRACE">Arguments: [ 2 | '2' ]</msg>
<msg timestamp="20190504 09:54:40.282" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190504 09:54:40.282" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:40.282" starttime="20190504 09:54:40.281"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${folder}${/}screenshot_*.html</arg>
</arguments>
<msg timestamp="20190504 09:54:40.283" level="TRACE">Arguments: [ '/tests/../screenshots/screenshot_*.html' ]</msg>
<msg timestamp="20190504 09:54:40.283" html="yes" level="INFO">File '&lt;a href="file:///screenshots/screenshot_*.html"&gt;/screenshots/screenshot_*.html&lt;/a&gt;' exists.</msg>
<msg timestamp="20190504 09:54:40.283" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:40.283" starttime="20190504 09:54:40.282"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190504 09:54:40.284" level="TRACE">Arguments: [ '1s' ]</msg>
<msg timestamp="20190504 09:54:41.284" level="INFO">Slept 1 second</msg>
<msg timestamp="20190504 09:54:41.284" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:41.284" starttime="20190504 09:54:40.283"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:41.286" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:41.286" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:41.286" starttime="20190504 09:54:41.286"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:41.287" critical="yes" starttime="20190504 09:54:40.276"></status>
</test>
<test id="s1-s2-t17" name="Test Write Bare">
<kw name="Write Bare" library="Mainframe3270">
<doc>Send only the string to the screen at the current cursor location.</doc>
<arguments>
<arg>${write_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:41.290" level="TRACE">Arguments: [ 'TEST' ]</msg>
<msg timestamp="20190504 09:54:41.290" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:41.290" starttime="20190504 09:54:41.289"></status>
</kw>
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>5</arg>
<arg>25</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${read_text}</var>
</assign>
<msg timestamp="20190504 09:54:41.291" level="TRACE">Arguments: [ '5' | '25' | '4' ]</msg>
<msg timestamp="20190504 09:54:41.292" level="TRACE">Return: b'TEST'</msg>
<msg timestamp="20190504 09:54:41.292" level="INFO">${read_text} = TEST</msg>
<status status="PASS" endtime="20190504 09:54:41.292" starttime="20190504 09:54:41.291"></status>
</kw>
<kw name="Take Screenshot" library="Mainframe3270">
<doc>Generate a screenshot of the IBM 3270 Mainframe in a html format. The
default folder is the log folder of RobotFramework, if you want change see the `Set Screenshot Folder`.</doc>
<msg timestamp="20190504 09:54:41.292" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:41.293" html="yes" level="INFO">&lt;iframe src="/tests/../screenshots/screenshot_1556963681292.html" height="410" width="670"&gt;&lt;/iframe&gt;</msg>
<msg timestamp="20190504 09:54:41.293" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:41.293" starttime="20190504 09:54:41.292"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${write_text}</arg>
<arg>${read_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:41.294" level="TRACE">Arguments: [ 'TEST' | b'TEST' ]</msg>
<msg timestamp="20190504 09:54:41.294" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'str'&gt;</msg>
<msg timestamp="20190504 09:54:41.294" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:41.294" starttime="20190504 09:54:41.294"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190504 09:54:41.295" level="TRACE">Arguments: [ '1s' ]</msg>
<msg timestamp="20190504 09:54:42.295" level="INFO">Slept 1 second</msg>
<msg timestamp="20190504 09:54:42.295" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:42.296" starttime="20190504 09:54:41.295"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:42.297" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:42.297" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:42.297" starttime="20190504 09:54:42.297"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:42.298" critical="yes" starttime="20190504 09:54:41.288"></status>
</test>
<test id="s1-s2-t18" name="Test Write Bare In Position">
<kw name="Write Bare In Position" library="Mainframe3270">
<doc>Send only the string to the screen at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>${write_text}</arg>
<arg>5</arg>
<arg>30</arg>
</arguments>
<msg timestamp="20190504 09:54:42.301" level="TRACE">Arguments: [ 'TEST' | '5' | '30' ]</msg>
<msg timestamp="20190504 09:54:42.302" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:42.302" starttime="20190504 09:54:42.301"></status>
</kw>
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>5</arg>
<arg>30</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${read_text}</var>
</assign>
<msg timestamp="20190504 09:54:42.303" level="TRACE">Arguments: [ '5' | '30' | '4' ]</msg>
<msg timestamp="20190504 09:54:42.303" level="TRACE">Return: b'TEST'</msg>
<msg timestamp="20190504 09:54:42.303" level="INFO">${read_text} = TEST</msg>
<status status="PASS" endtime="20190504 09:54:42.303" starttime="20190504 09:54:42.303"></status>
</kw>
<kw name="Take Screenshot" library="Mainframe3270">
<doc>Generate a screenshot of the IBM 3270 Mainframe in a html format. The
default folder is the log folder of RobotFramework, if you want change see the `Set Screenshot Folder`.</doc>
<msg timestamp="20190504 09:54:42.304" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:42.305" html="yes" level="INFO">&lt;iframe src="/tests/../screenshots/screenshot_1556963682304.html" height="410" width="670"&gt;&lt;/iframe&gt;</msg>
<msg timestamp="20190504 09:54:42.305" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:42.305" starttime="20190504 09:54:42.304"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${write_text}</arg>
<arg>${read_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:42.305" level="TRACE">Arguments: [ 'TEST' | b'TEST' ]</msg>
<msg timestamp="20190504 09:54:42.306" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'str'&gt;</msg>
<msg timestamp="20190504 09:54:42.306" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:42.306" starttime="20190504 09:54:42.305"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190504 09:54:42.306" level="TRACE">Arguments: [ '1s' ]</msg>
<msg timestamp="20190504 09:54:43.307" level="INFO">Slept 1 second</msg>
<msg timestamp="20190504 09:54:43.307" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:43.307" starttime="20190504 09:54:42.306"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:43.308" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:43.309" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:43.309" starttime="20190504 09:54:43.308"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:43.309" critical="yes" starttime="20190504 09:54:42.299"></status>
</test>
<test id="s1-s2-t19" name="Test Delete Char">
<kw name="Delete Char" library="Mainframe3270">
<doc>Delete character under cursor. If you want to delete a character that is in
another position, simply pass the coordinates "ypos"/"xpos".</doc>
<arguments>
<arg>5</arg>
<arg>25</arg>
</arguments>
<msg timestamp="20190504 09:54:43.312" level="TRACE">Arguments: [ '5' | '25' ]</msg>
<msg timestamp="20190504 09:54:43.313" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:43.313" starttime="20190504 09:54:43.312"></status>
</kw>
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>5</arg>
<arg>25</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${read_text}</var>
</assign>
<msg timestamp="20190504 09:54:43.314" level="TRACE">Arguments: [ '5' | '25' | '8' ]</msg>
<msg timestamp="20190504 09:54:43.314" level="TRACE">Return: b'EST TEST'</msg>
<msg timestamp="20190504 09:54:43.314" level="INFO">${read_text} = EST TEST</msg>
<status status="PASS" endtime="20190504 09:54:43.314" starttime="20190504 09:54:43.313"></status>
</kw>
<kw name="Take Screenshot" library="Mainframe3270">
<doc>Generate a screenshot of the IBM 3270 Mainframe in a html format. The
default folder is the log folder of RobotFramework, if you want change see the `Set Screenshot Folder`.</doc>
<msg timestamp="20190504 09:54:43.315" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:43.315" html="yes" level="INFO">&lt;iframe src="/tests/../screenshots/screenshot_1556963683315.html" height="410" width="670"&gt;&lt;/iframe&gt;</msg>
<msg timestamp="20190504 09:54:43.315" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:43.316" starttime="20190504 09:54:43.315"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${text_after_delete_char}</arg>
<arg>${read_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:43.316" level="TRACE">Arguments: [ 'EST TEST' | b'EST TEST' ]</msg>
<msg timestamp="20190504 09:54:43.316" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'str'&gt;</msg>
<msg timestamp="20190504 09:54:43.316" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:43.317" starttime="20190504 09:54:43.316"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190504 09:54:43.317" level="TRACE">Arguments: [ '1s' ]</msg>
<msg timestamp="20190504 09:54:44.318" level="INFO">Slept 1 second</msg>
<msg timestamp="20190504 09:54:44.318" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:44.318" starttime="20190504 09:54:43.317"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:44.319" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:44.319" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:44.319" starttime="20190504 09:54:44.319"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:44.320" critical="yes" starttime="20190504 09:54:43.311"></status>
</test>
<test id="s1-s2-t20" name="Test Delete Field">
<kw name="Delete Field" library="Mainframe3270">
<doc>Delete a entire contents in field at current cursor location and positions
cursor at beginning of field. If you want to delete a field that is in
another position, simply pass the coordinates "ypos"/"xpos" of any part of the field.</doc>
<msg timestamp="20190504 09:54:44.323" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:44.323" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:44.323" starttime="20190504 09:54:44.322"></status>
</kw>
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>5</arg>
<arg>25</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${read_text}</var>
</assign>
<msg timestamp="20190504 09:54:44.324" level="TRACE">Arguments: [ '5' | '25' | '8' ]</msg>
<msg timestamp="20190504 09:54:44.324" level="TRACE">Return: b'        '</msg>
<msg timestamp="20190504 09:54:44.325" level="INFO">${read_text} =         </msg>
<status status="PASS" endtime="20190504 09:54:44.325" starttime="20190504 09:54:44.324"></status>
</kw>
<kw name="Take Screenshot" library="Mainframe3270">
<doc>Generate a screenshot of the IBM 3270 Mainframe in a html format. The
default folder is the log folder of RobotFramework, if you want change see the `Set Screenshot Folder`.</doc>
<msg timestamp="20190504 09:54:44.325" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:44.326" html="yes" level="INFO">&lt;iframe src="/tests/../screenshots/screenshot_1556963684325.html" height="410" width="670"&gt;&lt;/iframe&gt;</msg>
<msg timestamp="20190504 09:54:44.326" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:44.326" starttime="20190504 09:54:44.325"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${text_after_delete_field}</arg>
<arg>${read_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:44.327" level="TRACE">Arguments: [ b'        ' | b'        ' ]</msg>
<msg timestamp="20190504 09:54:44.327" level="DEBUG">Argument types are:
&lt;type 'str'&gt;
&lt;type 'str'&gt;</msg>
<msg timestamp="20190504 09:54:44.327" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:44.327" starttime="20190504 09:54:44.326"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190504 09:54:44.328" level="TRACE">Arguments: [ '1s' ]</msg>
<msg timestamp="20190504 09:54:45.328" level="INFO">Slept 1 second</msg>
<msg timestamp="20190504 09:54:45.328" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:45.329" starttime="20190504 09:54:44.328"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:45.330" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:45.330" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:45.330" starttime="20190504 09:54:45.330"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:45.331" critical="yes" starttime="20190504 09:54:44.321"></status>
</test>
<test id="s1-s2-t21" name="Test Send Enter">
<kw name="Write Bare In Position" library="Mainframe3270">
<doc>Send only the string to the screen at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>${user}</arg>
<arg>5</arg>
<arg>25</arg>
</arguments>
<msg timestamp="20190504 09:54:45.334" level="TRACE">Arguments: [ 'USER0112' | '5' | '25' ]</msg>
<msg timestamp="20190504 09:54:45.335" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:45.335" starttime="20190504 09:54:45.334"></status>
</kw>
<kw name="Write Bare In Position" library="Mainframe3270">
<doc>Send only the string to the screen at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>${password}</arg>
<arg>6</arg>
<arg>25</arg>
</arguments>
<msg timestamp="20190504 09:54:45.336" level="TRACE">Arguments: [ 'user0112' | '6' | '25' ]</msg>
<msg timestamp="20190504 09:54:45.337" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:45.337" starttime="20190504 09:54:45.336"></status>
</kw>
<kw name="Send Enter" library="Mainframe3270">
<doc>Send a Enter to the screen.</doc>
<msg timestamp="20190504 09:54:45.337" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:46.189" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:46.189" starttime="20190504 09:54:45.337"></status>
</kw>
<kw name="Check if user is allocated to another job" library="pub400_resources">
<msg timestamp="20190504 09:54:46.191" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Page Should Contain String</arg>
<arg>is allocated to another job</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190504 09:54:46.191" level="TRACE">Arguments: [ 'Page Should Contain String' | 'is allocated to another job' ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>is allocated to another job</arg>
</arguments>
<msg timestamp="20190504 09:54:46.192" level="TRACE">Arguments: [ 'is allocated to another job' ]</msg>
<msg timestamp="20190504 09:54:46.197" level="FAIL">The string "is allocated to another job" was not found</msg>
<msg timestamp="20190504 09:54:46.197" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 325, in page_should_contain_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:46.197" starttime="20190504 09:54:46.192"></status>
</kw>
<msg timestamp="20190504 09:54:46.197" level="TRACE">Return: False</msg>
<msg timestamp="20190504 09:54:46.198" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20190504 09:54:46.198" starttime="20190504 09:54:46.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Send Enter</arg>
</arguments>
<msg timestamp="20190504 09:54:46.198" level="TRACE">Arguments: [ False | 'Send Enter' ]</msg>
<msg timestamp="20190504 09:54:46.198" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:46.198" starttime="20190504 09:54:46.198"></status>
</kw>
<msg timestamp="20190504 09:54:46.198" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:46.199" starttime="20190504 09:54:46.190"></status>
</kw>
<kw name="Check if user have messages to read" library="pub400_resources">
<msg timestamp="20190504 09:54:46.199" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Page Should Contain String</arg>
<arg>Display Messages</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190504 09:54:46.200" level="TRACE">Arguments: [ 'Page Should Contain String' | 'Display Messages' ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>Display Messages</arg>
</arguments>
<msg timestamp="20190504 09:54:46.200" level="TRACE">Arguments: [ 'Display Messages' ]</msg>
<msg timestamp="20190504 09:54:46.205" level="FAIL">The string "Display Messages" was not found</msg>
<msg timestamp="20190504 09:54:46.205" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 325, in page_should_contain_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:46.205" starttime="20190504 09:54:46.200"></status>
</kw>
<msg timestamp="20190504 09:54:46.205" level="TRACE">Return: False</msg>
<msg timestamp="20190504 09:54:46.205" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20190504 09:54:46.205" starttime="20190504 09:54:46.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Send Enter</arg>
</arguments>
<msg timestamp="20190504 09:54:46.206" level="TRACE">Arguments: [ False | 'Send Enter' ]</msg>
<msg timestamp="20190504 09:54:46.206" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:46.206" starttime="20190504 09:54:46.206"></status>
</kw>
<msg timestamp="20190504 09:54:46.206" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:46.206" starttime="20190504 09:54:46.199"></status>
</kw>
<kw name="Wait Field Detected" library="Mainframe3270">
<doc>Wait until the screen is ready, the cursor has been positioned
on a modifiable field, and the keyboard is unlocked.</doc>
<msg timestamp="20190504 09:54:46.207" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:46.207" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:46.207" starttime="20190504 09:54:46.207"></status>
</kw>
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>1</arg>
<arg>33</arg>
<arg>15</arg>
</arguments>
<assign>
<var>${read_text}</var>
</assign>
<msg timestamp="20190504 09:54:46.208" level="TRACE">Arguments: [ '1' | '33' | '15' ]</msg>
<msg timestamp="20190504 09:54:46.208" level="TRACE">Return: b'IBM i Main Menu'</msg>
<msg timestamp="20190504 09:54:46.208" level="INFO">${read_text} = IBM i Main Menu</msg>
<status status="PASS" endtime="20190504 09:54:46.208" starttime="20190504 09:54:46.208"></status>
</kw>
<kw name="Take Screenshot" library="Mainframe3270">
<doc>Generate a screenshot of the IBM 3270 Mainframe in a html format. The
default folder is the log folder of RobotFramework, if you want change see the `Set Screenshot Folder`.</doc>
<msg timestamp="20190504 09:54:46.209" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:46.209" html="yes" level="INFO">&lt;iframe src="/tests/../screenshots/screenshot_1556963686209.html" height="410" width="670"&gt;&lt;/iframe&gt;</msg>
<msg timestamp="20190504 09:54:46.209" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:46.210" starttime="20190504 09:54:46.209"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${main_menu_title}</arg>
<arg>${read_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:46.210" level="TRACE">Arguments: [ 'IBM i Main Menu' | b'IBM i Main Menu' ]</msg>
<msg timestamp="20190504 09:54:46.210" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'str'&gt;</msg>
<msg timestamp="20190504 09:54:46.211" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:46.211" starttime="20190504 09:54:46.210"></status>
</kw>
<kw name="Logout" library="pub400_resources">
<msg timestamp="20190504 09:54:46.212" level="TRACE">Arguments: [  ]</msg>
<kw name="Write Bare" library="Mainframe3270">
<doc>Send only the string to the screen at the current cursor location.</doc>
<arguments>
<arg>90</arg>
</arguments>
<msg timestamp="20190504 09:54:46.212" level="TRACE">Arguments: [ '90' ]</msg>
<msg timestamp="20190504 09:54:46.212" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:46.212" starttime="20190504 09:54:46.212"></status>
</kw>
<kw name="Send Enter" library="Mainframe3270">
<doc>Send a Enter to the screen.</doc>
<msg timestamp="20190504 09:54:46.213" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:47.042" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:47.042" starttime="20190504 09:54:46.213"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190504 09:54:47.043" level="TRACE">Arguments: [ '1s' ]</msg>
<msg timestamp="20190504 09:54:48.043" level="INFO">Slept 1 second</msg>
<msg timestamp="20190504 09:54:48.043" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:48.044" starttime="20190504 09:54:47.043"></status>
</kw>
<msg timestamp="20190504 09:54:48.044" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:48.044" starttime="20190504 09:54:46.211"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:48.045" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:48.046" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:48.046" starttime="20190504 09:54:48.045"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:48.046" critical="yes" starttime="20190504 09:54:45.333"></status>
</test>
<test id="s1-s2-t22" name="Test Move Next Field">
<kw name="Move Next Field" library="Mainframe3270">
<doc>Move the cursor to the next input field. Equivalent to pressing the Tab key.</doc>
<msg timestamp="20190504 09:54:48.049" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:48.049" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:48.050" starttime="20190504 09:54:48.049"></status>
</kw>
<kw name="Write Bare" library="Mainframe3270">
<doc>Send only the string to the screen at the current cursor location.</doc>
<arguments>
<arg>${write_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:48.050" level="TRACE">Arguments: [ 'TEST' ]</msg>
<msg timestamp="20190504 09:54:48.051" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:48.051" starttime="20190504 09:54:48.050"></status>
</kw>
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>5</arg>
<arg>25</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${read_text}</var>
</assign>
<msg timestamp="20190504 09:54:48.051" level="TRACE">Arguments: [ '5' | '25' | '4' ]</msg>
<msg timestamp="20190504 09:54:48.052" level="TRACE">Return: b'    '</msg>
<msg timestamp="20190504 09:54:48.052" level="INFO">${read_text} =     </msg>
<status status="PASS" endtime="20190504 09:54:48.052" starttime="20190504 09:54:48.051"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${text_after_move_next_field}</arg>
<arg>${read_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:48.053" level="TRACE">Arguments: [ b'    ' | b'    ' ]</msg>
<msg timestamp="20190504 09:54:48.053" level="DEBUG">Argument types are:
&lt;type 'str'&gt;
&lt;type 'str'&gt;</msg>
<msg timestamp="20190504 09:54:48.053" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:48.053" starttime="20190504 09:54:48.052"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190504 09:54:48.054" level="TRACE">Arguments: [ '1s' ]</msg>
<msg timestamp="20190504 09:54:49.054" level="INFO">Slept 1 second</msg>
<msg timestamp="20190504 09:54:49.054" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:49.054" starttime="20190504 09:54:48.053"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:49.056" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:49.057" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:49.057" starttime="20190504 09:54:49.056"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:49.057" critical="yes" starttime="20190504 09:54:48.048"></status>
</test>
<test id="s1-s2-t23" name="Test Move Previous Field">
<kw name="Move Previous Field" library="Mainframe3270">
<doc>Move the cursor to the previous input field. Equivalent to pressing the Shift+Tab keys.</doc>
<msg timestamp="20190504 09:54:49.060" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:49.061" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:49.061" starttime="20190504 09:54:49.060"></status>
</kw>
<kw name="Move Previous Field" library="Mainframe3270">
<doc>Move the cursor to the previous input field. Equivalent to pressing the Shift+Tab keys.</doc>
<msg timestamp="20190504 09:54:49.061" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:49.062" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:49.062" starttime="20190504 09:54:49.061"></status>
</kw>
<kw name="Write Bare" library="Mainframe3270">
<doc>Send only the string to the screen at the current cursor location.</doc>
<arguments>
<arg>${write_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:49.062" level="TRACE">Arguments: [ 'TEST' ]</msg>
<msg timestamp="20190504 09:54:49.063" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:49.063" starttime="20190504 09:54:49.062"></status>
</kw>
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>5</arg>
<arg>25</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${read_text}</var>
</assign>
<msg timestamp="20190504 09:54:49.063" level="TRACE">Arguments: [ '5' | '25' | '4' ]</msg>
<msg timestamp="20190504 09:54:49.064" level="TRACE">Return: b'TEST'</msg>
<msg timestamp="20190504 09:54:49.064" level="INFO">${read_text} = TEST</msg>
<status status="PASS" endtime="20190504 09:54:49.064" starttime="20190504 09:54:49.063"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${write_text}</arg>
<arg>${read_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:49.065" level="TRACE">Arguments: [ 'TEST' | b'TEST' ]</msg>
<msg timestamp="20190504 09:54:49.065" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'str'&gt;</msg>
<msg timestamp="20190504 09:54:49.065" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:49.065" starttime="20190504 09:54:49.064"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190504 09:54:49.065" level="TRACE">Arguments: [ '1s' ]</msg>
<msg timestamp="20190504 09:54:50.066" level="INFO">Slept 1 second</msg>
<msg timestamp="20190504 09:54:50.066" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:50.066" starttime="20190504 09:54:49.065"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:50.068" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:50.068" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:50.068" starttime="20190504 09:54:50.068"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:50.069" critical="yes" starttime="20190504 09:54:49.059"></status>
</test>
<test id="s1-s2-t24" name="Test Write">
<kw name="Write Bare In Position" library="Mainframe3270">
<doc>Send only the string to the screen at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>${user}</arg>
<arg>5</arg>
<arg>25</arg>
</arguments>
<msg timestamp="20190504 09:54:50.073" level="TRACE">Arguments: [ 'USER0112' | '5' | '25' ]</msg>
<msg timestamp="20190504 09:54:50.073" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:50.073" starttime="20190504 09:54:50.071"></status>
</kw>
<kw name="Move Next Field" library="Mainframe3270">
<doc>Move the cursor to the next input field. Equivalent to pressing the Tab key.</doc>
<msg timestamp="20190504 09:54:50.074" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:50.074" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:50.074" starttime="20190504 09:54:50.074"></status>
</kw>
<kw name="Write" library="Mainframe3270">
<doc>Send a string to the screen at the current cursor location *and a Enter.*</doc>
<arguments>
<arg>${password}</arg>
</arguments>
<msg timestamp="20190504 09:54:50.075" level="TRACE">Arguments: [ 'user0112' ]</msg>
<msg timestamp="20190504 09:54:50.914" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:50.914" starttime="20190504 09:54:50.075"></status>
</kw>
<kw name="Check if user is allocated to another job" library="pub400_resources">
<msg timestamp="20190504 09:54:50.915" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Page Should Contain String</arg>
<arg>is allocated to another job</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190504 09:54:50.916" level="TRACE">Arguments: [ 'Page Should Contain String' | 'is allocated to another job' ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>is allocated to another job</arg>
</arguments>
<msg timestamp="20190504 09:54:50.917" level="TRACE">Arguments: [ 'is allocated to another job' ]</msg>
<msg timestamp="20190504 09:54:50.922" level="FAIL">The string "is allocated to another job" was not found</msg>
<msg timestamp="20190504 09:54:50.922" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 325, in page_should_contain_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:50.922" starttime="20190504 09:54:50.916"></status>
</kw>
<msg timestamp="20190504 09:54:50.922" level="TRACE">Return: False</msg>
<msg timestamp="20190504 09:54:50.923" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20190504 09:54:50.923" starttime="20190504 09:54:50.916"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Send Enter</arg>
</arguments>
<msg timestamp="20190504 09:54:50.923" level="TRACE">Arguments: [ False | 'Send Enter' ]</msg>
<msg timestamp="20190504 09:54:50.923" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:50.923" starttime="20190504 09:54:50.923"></status>
</kw>
<msg timestamp="20190504 09:54:50.923" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:50.924" starttime="20190504 09:54:50.915"></status>
</kw>
<kw name="Check if user have messages to read" library="pub400_resources">
<msg timestamp="20190504 09:54:50.924" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Page Should Contain String</arg>
<arg>Display Messages</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190504 09:54:50.925" level="TRACE">Arguments: [ 'Page Should Contain String' | 'Display Messages' ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>Display Messages</arg>
</arguments>
<msg timestamp="20190504 09:54:50.925" level="TRACE">Arguments: [ 'Display Messages' ]</msg>
<msg timestamp="20190504 09:54:50.930" level="FAIL">The string "Display Messages" was not found</msg>
<msg timestamp="20190504 09:54:50.930" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 325, in page_should_contain_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:50.930" starttime="20190504 09:54:50.925"></status>
</kw>
<msg timestamp="20190504 09:54:50.930" level="TRACE">Return: False</msg>
<msg timestamp="20190504 09:54:50.930" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20190504 09:54:50.930" starttime="20190504 09:54:50.925"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Send Enter</arg>
</arguments>
<msg timestamp="20190504 09:54:50.931" level="TRACE">Arguments: [ False | 'Send Enter' ]</msg>
<msg timestamp="20190504 09:54:50.931" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:50.931" starttime="20190504 09:54:50.930"></status>
</kw>
<msg timestamp="20190504 09:54:50.931" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:50.931" starttime="20190504 09:54:50.924"></status>
</kw>
<kw name="Wait Field Detected" library="Mainframe3270">
<doc>Wait until the screen is ready, the cursor has been positioned
on a modifiable field, and the keyboard is unlocked.</doc>
<msg timestamp="20190504 09:54:50.932" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:50.932" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:50.932" starttime="20190504 09:54:50.932"></status>
</kw>
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>1</arg>
<arg>33</arg>
<arg>15</arg>
</arguments>
<assign>
<var>${read_text}</var>
</assign>
<msg timestamp="20190504 09:54:50.933" level="TRACE">Arguments: [ '1' | '33' | '15' ]</msg>
<msg timestamp="20190504 09:54:50.933" level="TRACE">Return: b'IBM i Main Menu'</msg>
<msg timestamp="20190504 09:54:50.933" level="INFO">${read_text} = IBM i Main Menu</msg>
<status status="PASS" endtime="20190504 09:54:50.933" starttime="20190504 09:54:50.932"></status>
</kw>
<kw name="Take Screenshot" library="Mainframe3270">
<doc>Generate a screenshot of the IBM 3270 Mainframe in a html format. The
default folder is the log folder of RobotFramework, if you want change see the `Set Screenshot Folder`.</doc>
<msg timestamp="20190504 09:54:50.934" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:50.934" html="yes" level="INFO">&lt;iframe src="/tests/../screenshots/screenshot_1556963690934.html" height="410" width="670"&gt;&lt;/iframe&gt;</msg>
<msg timestamp="20190504 09:54:50.934" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:50.934" starttime="20190504 09:54:50.933"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${main_menu_title}</arg>
<arg>${read_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:50.935" level="TRACE">Arguments: [ 'IBM i Main Menu' | b'IBM i Main Menu' ]</msg>
<msg timestamp="20190504 09:54:50.935" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'str'&gt;</msg>
<msg timestamp="20190504 09:54:50.935" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:50.935" starttime="20190504 09:54:50.935"></status>
</kw>
<kw name="Logout" library="pub400_resources">
<msg timestamp="20190504 09:54:50.936" level="TRACE">Arguments: [  ]</msg>
<kw name="Write Bare" library="Mainframe3270">
<doc>Send only the string to the screen at the current cursor location.</doc>
<arguments>
<arg>90</arg>
</arguments>
<msg timestamp="20190504 09:54:50.937" level="TRACE">Arguments: [ '90' ]</msg>
<msg timestamp="20190504 09:54:50.937" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:50.937" starttime="20190504 09:54:50.936"></status>
</kw>
<kw name="Send Enter" library="Mainframe3270">
<doc>Send a Enter to the screen.</doc>
<msg timestamp="20190504 09:54:50.937" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:51.762" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:51.763" starttime="20190504 09:54:50.937"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190504 09:54:51.763" level="TRACE">Arguments: [ '1s' ]</msg>
<msg timestamp="20190504 09:54:52.764" level="INFO">Slept 1 second</msg>
<msg timestamp="20190504 09:54:52.764" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:52.764" starttime="20190504 09:54:51.763"></status>
</kw>
<msg timestamp="20190504 09:54:52.764" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:52.764" starttime="20190504 09:54:50.936"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:52.766" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:52.766" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:52.766" starttime="20190504 09:54:52.765"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:52.766" critical="yes" starttime="20190504 09:54:50.070"></status>
</test>
<test id="s1-s2-t25" name="Test Write In Position">
<kw name="Write Bare In Position" library="Mainframe3270">
<doc>Send only the string to the screen at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>${user}</arg>
<arg>5</arg>
<arg>25</arg>
</arguments>
<msg timestamp="20190504 09:54:52.770" level="TRACE">Arguments: [ 'USER0112' | '5' | '25' ]</msg>
<msg timestamp="20190504 09:54:52.770" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:52.771" starttime="20190504 09:54:52.769"></status>
</kw>
<kw name="Write In Position" library="Mainframe3270">
<doc>Send a string to the screen at screen co-ordinates "ypos"/"xpos" and a Enter.</doc>
<arguments>
<arg>${password}</arg>
<arg>6</arg>
<arg>25</arg>
</arguments>
<msg timestamp="20190504 09:54:52.771" level="TRACE">Arguments: [ 'user0112' | '6' | '25' ]</msg>
<msg timestamp="20190504 09:54:53.616" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:53.616" starttime="20190504 09:54:52.771"></status>
</kw>
<kw name="Check if user is allocated to another job" library="pub400_resources">
<msg timestamp="20190504 09:54:53.617" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Page Should Contain String</arg>
<arg>is allocated to another job</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190504 09:54:53.618" level="TRACE">Arguments: [ 'Page Should Contain String' | 'is allocated to another job' ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>is allocated to another job</arg>
</arguments>
<msg timestamp="20190504 09:54:53.619" level="TRACE">Arguments: [ 'is allocated to another job' ]</msg>
<msg timestamp="20190504 09:54:53.624" level="FAIL">The string "is allocated to another job" was not found</msg>
<msg timestamp="20190504 09:54:53.624" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 325, in page_should_contain_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:53.624" starttime="20190504 09:54:53.619"></status>
</kw>
<msg timestamp="20190504 09:54:53.624" level="TRACE">Return: False</msg>
<msg timestamp="20190504 09:54:53.625" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20190504 09:54:53.625" starttime="20190504 09:54:53.618"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Send Enter</arg>
</arguments>
<msg timestamp="20190504 09:54:53.625" level="TRACE">Arguments: [ False | 'Send Enter' ]</msg>
<msg timestamp="20190504 09:54:53.625" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:53.625" starttime="20190504 09:54:53.625"></status>
</kw>
<msg timestamp="20190504 09:54:53.625" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:53.626" starttime="20190504 09:54:53.617"></status>
</kw>
<kw name="Check if user have messages to read" library="pub400_resources">
<msg timestamp="20190504 09:54:53.626" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Page Should Contain String</arg>
<arg>Display Messages</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190504 09:54:53.627" level="TRACE">Arguments: [ 'Page Should Contain String' | 'Display Messages' ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>Display Messages</arg>
</arguments>
<msg timestamp="20190504 09:54:53.627" level="TRACE">Arguments: [ 'Display Messages' ]</msg>
<msg timestamp="20190504 09:54:53.632" level="FAIL">The string "Display Messages" was not found</msg>
<msg timestamp="20190504 09:54:53.632" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 325, in page_should_contain_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:53.632" starttime="20190504 09:54:53.627"></status>
</kw>
<msg timestamp="20190504 09:54:53.632" level="TRACE">Return: False</msg>
<msg timestamp="20190504 09:54:53.632" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20190504 09:54:53.632" starttime="20190504 09:54:53.627"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Send Enter</arg>
</arguments>
<msg timestamp="20190504 09:54:53.633" level="TRACE">Arguments: [ False | 'Send Enter' ]</msg>
<msg timestamp="20190504 09:54:53.633" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:53.633" starttime="20190504 09:54:53.633"></status>
</kw>
<msg timestamp="20190504 09:54:53.633" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:53.633" starttime="20190504 09:54:53.626"></status>
</kw>
<kw name="Wait Field Detected" library="Mainframe3270">
<doc>Wait until the screen is ready, the cursor has been positioned
on a modifiable field, and the keyboard is unlocked.</doc>
<msg timestamp="20190504 09:54:53.634" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:53.634" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:53.634" starttime="20190504 09:54:53.634"></status>
</kw>
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>1</arg>
<arg>33</arg>
<arg>15</arg>
</arguments>
<assign>
<var>${read_text}</var>
</assign>
<msg timestamp="20190504 09:54:53.635" level="TRACE">Arguments: [ '1' | '33' | '15' ]</msg>
<msg timestamp="20190504 09:54:53.635" level="TRACE">Return: b'IBM i Main Menu'</msg>
<msg timestamp="20190504 09:54:53.635" level="INFO">${read_text} = IBM i Main Menu</msg>
<status status="PASS" endtime="20190504 09:54:53.635" starttime="20190504 09:54:53.635"></status>
</kw>
<kw name="Take Screenshot" library="Mainframe3270">
<doc>Generate a screenshot of the IBM 3270 Mainframe in a html format. The
default folder is the log folder of RobotFramework, if you want change see the `Set Screenshot Folder`.</doc>
<msg timestamp="20190504 09:54:53.636" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:53.636" html="yes" level="INFO">&lt;iframe src="/tests/../screenshots/screenshot_1556963693636.html" height="410" width="670"&gt;&lt;/iframe&gt;</msg>
<msg timestamp="20190504 09:54:53.636" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:53.637" starttime="20190504 09:54:53.636"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${main_menu_title}</arg>
<arg>${read_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:53.637" level="TRACE">Arguments: [ 'IBM i Main Menu' | b'IBM i Main Menu' ]</msg>
<msg timestamp="20190504 09:54:53.637" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'str'&gt;</msg>
<msg timestamp="20190504 09:54:53.638" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:53.638" starttime="20190504 09:54:53.637"></status>
</kw>
<kw name="Logout" library="pub400_resources">
<msg timestamp="20190504 09:54:53.638" level="TRACE">Arguments: [  ]</msg>
<kw name="Write Bare" library="Mainframe3270">
<doc>Send only the string to the screen at the current cursor location.</doc>
<arguments>
<arg>90</arg>
</arguments>
<msg timestamp="20190504 09:54:53.639" level="TRACE">Arguments: [ '90' ]</msg>
<msg timestamp="20190504 09:54:53.639" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:53.639" starttime="20190504 09:54:53.638"></status>
</kw>
<kw name="Send Enter" library="Mainframe3270">
<doc>Send a Enter to the screen.</doc>
<msg timestamp="20190504 09:54:53.640" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:54.466" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:54.467" starttime="20190504 09:54:53.640"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190504 09:54:54.467" level="TRACE">Arguments: [ '1s' ]</msg>
<msg timestamp="20190504 09:54:55.468" level="INFO">Slept 1 second</msg>
<msg timestamp="20190504 09:54:55.468" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:55.468" starttime="20190504 09:54:54.467"></status>
</kw>
<msg timestamp="20190504 09:54:55.468" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:55.469" starttime="20190504 09:54:53.638"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:55.470" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:55.471" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:55.471" starttime="20190504 09:54:55.470"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:55.471" critical="yes" starttime="20190504 09:54:52.768"></status>
</test>
<test id="s1-s2-t26" name="Test Send PF">
<kw name="Logon" library="pub400_resources">
<msg timestamp="20190504 09:54:55.474" level="TRACE">Arguments: [  ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>${welcome_title}</arg>
</arguments>
<msg timestamp="20190504 09:54:55.475" level="TRACE">Arguments: [ 'Welcome to PUB400.COM * your public IBM i server' ]</msg>
<msg timestamp="20190504 09:54:55.475" level="INFO">The string "Welcome to PUB400.COM * your public IBM i server" was found</msg>
<msg timestamp="20190504 09:54:55.475" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:55.475" starttime="20190504 09:54:55.475"></status>
</kw>
<kw name="Write Bare In Position" library="Mainframe3270">
<doc>Send only the string to the screen at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>${user}</arg>
<arg>5</arg>
<arg>25</arg>
</arguments>
<msg timestamp="20190504 09:54:55.476" level="TRACE">Arguments: [ 'USER0112' | '5' | '25' ]</msg>
<msg timestamp="20190504 09:54:55.476" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:55.477" starttime="20190504 09:54:55.476"></status>
</kw>
<kw name="Write Bare In Position" library="Mainframe3270">
<doc>Send only the string to the screen at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>${password}</arg>
<arg>6</arg>
<arg>25</arg>
</arguments>
<msg timestamp="20190504 09:54:55.477" level="TRACE">Arguments: [ 'user0112' | '6' | '25' ]</msg>
<msg timestamp="20190504 09:54:55.478" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:55.478" starttime="20190504 09:54:55.477"></status>
</kw>
<kw name="Send Enter" library="Mainframe3270">
<doc>Send a Enter to the screen.</doc>
<msg timestamp="20190504 09:54:55.478" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:56.336" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:56.336" starttime="20190504 09:54:55.478"></status>
</kw>
<kw name="Check if user is allocated to another job" library="pub400_resources">
<msg timestamp="20190504 09:54:56.337" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Page Should Contain String</arg>
<arg>is allocated to another job</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190504 09:54:56.337" level="TRACE">Arguments: [ 'Page Should Contain String' | 'is allocated to another job' ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>is allocated to another job</arg>
</arguments>
<msg timestamp="20190504 09:54:56.338" level="TRACE">Arguments: [ 'is allocated to another job' ]</msg>
<msg timestamp="20190504 09:54:56.343" level="FAIL">The string "is allocated to another job" was not found</msg>
<msg timestamp="20190504 09:54:56.343" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 325, in page_should_contain_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:56.343" starttime="20190504 09:54:56.337"></status>
</kw>
<msg timestamp="20190504 09:54:56.343" level="TRACE">Return: False</msg>
<msg timestamp="20190504 09:54:56.343" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20190504 09:54:56.343" starttime="20190504 09:54:56.337"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Send Enter</arg>
</arguments>
<msg timestamp="20190504 09:54:56.343" level="TRACE">Arguments: [ False | 'Send Enter' ]</msg>
<msg timestamp="20190504 09:54:56.344" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:56.344" starttime="20190504 09:54:56.343"></status>
</kw>
<msg timestamp="20190504 09:54:56.344" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:56.344" starttime="20190504 09:54:56.336"></status>
</kw>
<kw name="Check if user have messages to read" library="pub400_resources">
<msg timestamp="20190504 09:54:56.344" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Page Should Contain String</arg>
<arg>Display Messages</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190504 09:54:56.345" level="TRACE">Arguments: [ 'Page Should Contain String' | 'Display Messages' ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>Display Messages</arg>
</arguments>
<msg timestamp="20190504 09:54:56.345" level="TRACE">Arguments: [ 'Display Messages' ]</msg>
<msg timestamp="20190504 09:54:56.350" level="FAIL">The string "Display Messages" was not found</msg>
<msg timestamp="20190504 09:54:56.350" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 325, in page_should_contain_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:54:56.350" starttime="20190504 09:54:56.345"></status>
</kw>
<msg timestamp="20190504 09:54:56.350" level="TRACE">Return: False</msg>
<msg timestamp="20190504 09:54:56.350" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20190504 09:54:56.350" starttime="20190504 09:54:56.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Send Enter</arg>
</arguments>
<msg timestamp="20190504 09:54:56.351" level="TRACE">Arguments: [ False | 'Send Enter' ]</msg>
<msg timestamp="20190504 09:54:56.351" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:56.351" starttime="20190504 09:54:56.350"></status>
</kw>
<msg timestamp="20190504 09:54:56.351" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:56.351" starttime="20190504 09:54:56.344"></status>
</kw>
<kw name="Wait Field Detected" library="Mainframe3270">
<doc>Wait until the screen is ready, the cursor has been positioned
on a modifiable field, and the keyboard is unlocked.</doc>
<msg timestamp="20190504 09:54:56.351" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:56.352" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:56.352" starttime="20190504 09:54:56.351"></status>
</kw>
<msg timestamp="20190504 09:54:56.352" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:56.352" starttime="20190504 09:54:55.474"></status>
</kw>
<kw name="Send PF" library="Mainframe3270">
<doc>Send a Program Function to the screen.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190504 09:54:56.353" level="TRACE">Arguments: [ '1' ]</msg>
<msg timestamp="20190504 09:54:57.184" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:57.185" starttime="20190504 09:54:56.353"></status>
</kw>
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>1</arg>
<arg>30</arg>
<arg>22</arg>
</arguments>
<assign>
<var>${read_text}</var>
</assign>
<msg timestamp="20190504 09:54:57.186" level="TRACE">Arguments: [ '1' | '30' | '22' ]</msg>
<msg timestamp="20190504 09:54:57.187" level="TRACE">Return: b'IBM i Main Menu - Help'</msg>
<msg timestamp="20190504 09:54:57.187" level="INFO">${read_text} = IBM i Main Menu - Help</msg>
<status status="PASS" endtime="20190504 09:54:57.187" starttime="20190504 09:54:57.186"></status>
</kw>
<kw name="Take Screenshot" library="Mainframe3270">
<doc>Generate a screenshot of the IBM 3270 Mainframe in a html format. The
default folder is the log folder of RobotFramework, if you want change see the `Set Screenshot Folder`.</doc>
<msg timestamp="20190504 09:54:57.188" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:57.189" html="yes" level="INFO">&lt;iframe src="/tests/../screenshots/screenshot_1556963697188.html" height="410" width="670"&gt;&lt;/iframe&gt;</msg>
<msg timestamp="20190504 09:54:57.189" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:57.189" starttime="20190504 09:54:57.188"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${main_menu_help_title}</arg>
<arg>${read_text}</arg>
</arguments>
<msg timestamp="20190504 09:54:57.190" level="TRACE">Arguments: [ 'IBM i Main Menu - Help' | b'IBM i Main Menu - Help' ]</msg>
<msg timestamp="20190504 09:54:57.190" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'str'&gt;</msg>
<msg timestamp="20190504 09:54:57.190" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:57.190" starttime="20190504 09:54:57.190"></status>
</kw>
<kw name="Send Enter" library="Mainframe3270">
<doc>Send a Enter to the screen.</doc>
<msg timestamp="20190504 09:54:57.191" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:57.994" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:57.994" starttime="20190504 09:54:57.191"></status>
</kw>
<kw name="Logout" library="pub400_resources">
<msg timestamp="20190504 09:54:57.996" level="TRACE">Arguments: [  ]</msg>
<kw name="Write Bare" library="Mainframe3270">
<doc>Send only the string to the screen at the current cursor location.</doc>
<arguments>
<arg>90</arg>
</arguments>
<msg timestamp="20190504 09:54:57.996" level="TRACE">Arguments: [ '90' ]</msg>
<msg timestamp="20190504 09:54:57.997" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:57.997" starttime="20190504 09:54:57.996"></status>
</kw>
<kw name="Send Enter" library="Mainframe3270">
<doc>Send a Enter to the screen.</doc>
<msg timestamp="20190504 09:54:57.997" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:54:58.816" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:58.817" starttime="20190504 09:54:57.997"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190504 09:54:58.817" level="TRACE">Arguments: [ '1s' ]</msg>
<msg timestamp="20190504 09:54:59.818" level="INFO">Slept 1 second</msg>
<msg timestamp="20190504 09:54:59.818" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:59.818" starttime="20190504 09:54:58.817"></status>
</kw>
<msg timestamp="20190504 09:54:59.818" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:59.818" starttime="20190504 09:54:57.995"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:54:59.820" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:54:59.820" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:59.820" starttime="20190504 09:54:59.820"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:54:59.821" critical="yes" starttime="20190504 09:54:55.473"></status>
</test>
<test id="s1-s2-t27" name="Test Execute Command">
<kw name="Logon" library="pub400_resources">
<msg timestamp="20190504 09:54:59.824" level="TRACE">Arguments: [  ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>${welcome_title}</arg>
</arguments>
<msg timestamp="20190504 09:54:59.824" level="TRACE">Arguments: [ 'Welcome to PUB400.COM * your public IBM i server' ]</msg>
<msg timestamp="20190504 09:54:59.825" level="INFO">The string "Welcome to PUB400.COM * your public IBM i server" was found</msg>
<msg timestamp="20190504 09:54:59.825" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:59.825" starttime="20190504 09:54:59.824"></status>
</kw>
<kw name="Write Bare In Position" library="Mainframe3270">
<doc>Send only the string to the screen at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>${user}</arg>
<arg>5</arg>
<arg>25</arg>
</arguments>
<msg timestamp="20190504 09:54:59.825" level="TRACE">Arguments: [ 'USER0112' | '5' | '25' ]</msg>
<msg timestamp="20190504 09:54:59.826" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:59.826" starttime="20190504 09:54:59.825"></status>
</kw>
<kw name="Write Bare In Position" library="Mainframe3270">
<doc>Send only the string to the screen at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>${password}</arg>
<arg>6</arg>
<arg>25</arg>
</arguments>
<msg timestamp="20190504 09:54:59.826" level="TRACE">Arguments: [ 'user0112' | '6' | '25' ]</msg>
<msg timestamp="20190504 09:54:59.827" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:54:59.827" starttime="20190504 09:54:59.826"></status>
</kw>
<kw name="Send Enter" library="Mainframe3270">
<doc>Send a Enter to the screen.</doc>
<msg timestamp="20190504 09:54:59.827" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:55:00.668" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:00.668" starttime="20190504 09:54:59.827"></status>
</kw>
<kw name="Check if user is allocated to another job" library="pub400_resources">
<msg timestamp="20190504 09:55:00.669" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Page Should Contain String</arg>
<arg>is allocated to another job</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190504 09:55:00.670" level="TRACE">Arguments: [ 'Page Should Contain String' | 'is allocated to another job' ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>is allocated to another job</arg>
</arguments>
<msg timestamp="20190504 09:55:00.670" level="TRACE">Arguments: [ 'is allocated to another job' ]</msg>
<msg timestamp="20190504 09:55:00.675" level="FAIL">The string "is allocated to another job" was not found</msg>
<msg timestamp="20190504 09:55:00.675" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 325, in page_should_contain_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:55:00.675" starttime="20190504 09:55:00.670"></status>
</kw>
<msg timestamp="20190504 09:55:00.675" level="TRACE">Return: False</msg>
<msg timestamp="20190504 09:55:00.675" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20190504 09:55:00.675" starttime="20190504 09:55:00.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Send Enter</arg>
</arguments>
<msg timestamp="20190504 09:55:00.676" level="TRACE">Arguments: [ False | 'Send Enter' ]</msg>
<msg timestamp="20190504 09:55:00.676" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:00.676" starttime="20190504 09:55:00.676"></status>
</kw>
<msg timestamp="20190504 09:55:00.676" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:00.676" starttime="20190504 09:55:00.668"></status>
</kw>
<kw name="Check if user have messages to read" library="pub400_resources">
<msg timestamp="20190504 09:55:00.677" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Page Should Contain String</arg>
<arg>Display Messages</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190504 09:55:00.677" level="TRACE">Arguments: [ 'Page Should Contain String' | 'Display Messages' ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>Display Messages</arg>
</arguments>
<msg timestamp="20190504 09:55:00.677" level="TRACE">Arguments: [ 'Display Messages' ]</msg>
<msg timestamp="20190504 09:55:00.682" level="FAIL">The string "Display Messages" was not found</msg>
<msg timestamp="20190504 09:55:00.682" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 325, in page_should_contain_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:55:00.682" starttime="20190504 09:55:00.677"></status>
</kw>
<msg timestamp="20190504 09:55:00.682" level="TRACE">Return: False</msg>
<msg timestamp="20190504 09:55:00.683" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20190504 09:55:00.683" starttime="20190504 09:55:00.677"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Send Enter</arg>
</arguments>
<msg timestamp="20190504 09:55:00.683" level="TRACE">Arguments: [ False | 'Send Enter' ]</msg>
<msg timestamp="20190504 09:55:00.683" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:00.683" starttime="20190504 09:55:00.683"></status>
</kw>
<msg timestamp="20190504 09:55:00.683" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:00.683" starttime="20190504 09:55:00.676"></status>
</kw>
<kw name="Wait Field Detected" library="Mainframe3270">
<doc>Wait until the screen is ready, the cursor has been positioned
on a modifiable field, and the keyboard is unlocked.</doc>
<msg timestamp="20190504 09:55:00.684" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:55:00.684" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:00.684" starttime="20190504 09:55:00.683"></status>
</kw>
<msg timestamp="20190504 09:55:00.684" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:00.684" starttime="20190504 09:54:59.823"></status>
</kw>
<kw name="Execute Command" library="Mainframe3270">
<doc>Execute an [http://x3270.bgp.nu/wc3270-man.html#Actions|x3270 command].</doc>
<arguments>
<arg>PF(1)</arg>
</arguments>
<msg timestamp="20190504 09:55:00.685" level="TRACE">Arguments: [ 'PF(1)' ]</msg>
<msg timestamp="20190504 09:55:01.490" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:01.490" starttime="20190504 09:55:00.685"></status>
</kw>
<kw name="Read" library="Mainframe3270">
<doc>Get a string of "length" at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>1</arg>
<arg>30</arg>
<arg>22</arg>
</arguments>
<assign>
<var>${read_text}</var>
</assign>
<msg timestamp="20190504 09:55:01.492" level="TRACE">Arguments: [ '1' | '30' | '22' ]</msg>
<msg timestamp="20190504 09:55:01.492" level="TRACE">Return: b'IBM i Main Menu - Help'</msg>
<msg timestamp="20190504 09:55:01.493" level="INFO">${read_text} = IBM i Main Menu - Help</msg>
<status status="PASS" endtime="20190504 09:55:01.493" starttime="20190504 09:55:01.491"></status>
</kw>
<kw name="Take Screenshot" library="Mainframe3270">
<doc>Generate a screenshot of the IBM 3270 Mainframe in a html format. The
default folder is the log folder of RobotFramework, if you want change see the `Set Screenshot Folder`.</doc>
<msg timestamp="20190504 09:55:01.494" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:55:01.494" html="yes" level="INFO">&lt;iframe src="/tests/../screenshots/screenshot_1556963701494.html" height="410" width="670"&gt;&lt;/iframe&gt;</msg>
<msg timestamp="20190504 09:55:01.495" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:01.495" starttime="20190504 09:55:01.493"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${main_menu_help_title}</arg>
<arg>${read_text}</arg>
</arguments>
<msg timestamp="20190504 09:55:01.496" level="TRACE">Arguments: [ 'IBM i Main Menu - Help' | b'IBM i Main Menu - Help' ]</msg>
<msg timestamp="20190504 09:55:01.496" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'str'&gt;</msg>
<msg timestamp="20190504 09:55:01.496" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:01.496" starttime="20190504 09:55:01.495"></status>
</kw>
<kw name="Send Enter" library="Mainframe3270">
<doc>Send a Enter to the screen.</doc>
<msg timestamp="20190504 09:55:01.497" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:55:02.299" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:02.300" starttime="20190504 09:55:01.497"></status>
</kw>
<kw name="Logout" library="pub400_resources">
<msg timestamp="20190504 09:55:02.301" level="TRACE">Arguments: [  ]</msg>
<kw name="Write Bare" library="Mainframe3270">
<doc>Send only the string to the screen at the current cursor location.</doc>
<arguments>
<arg>90</arg>
</arguments>
<msg timestamp="20190504 09:55:02.302" level="TRACE">Arguments: [ '90' ]</msg>
<msg timestamp="20190504 09:55:02.303" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:02.303" starttime="20190504 09:55:02.302"></status>
</kw>
<kw name="Send Enter" library="Mainframe3270">
<doc>Send a Enter to the screen.</doc>
<msg timestamp="20190504 09:55:02.303" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:55:03.122" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:03.122" starttime="20190504 09:55:02.303"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190504 09:55:03.123" level="TRACE">Arguments: [ '1s' ]</msg>
<msg timestamp="20190504 09:55:04.123" level="INFO">Slept 1 second</msg>
<msg timestamp="20190504 09:55:04.123" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:04.124" starttime="20190504 09:55:03.122"></status>
</kw>
<msg timestamp="20190504 09:55:04.124" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:04.124" starttime="20190504 09:55:02.301"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:55:04.125" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:55:04.126" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:04.126" starttime="20190504 09:55:04.125"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:55:04.126" critical="yes" starttime="20190504 09:54:59.822"></status>
</test>
<test id="s1-s2-t28" name="Test Wait Until String">
<kw name="Logon" library="pub400_resources">
<msg timestamp="20190504 09:55:04.129" level="TRACE">Arguments: [  ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>${welcome_title}</arg>
</arguments>
<msg timestamp="20190504 09:55:04.130" level="TRACE">Arguments: [ 'Welcome to PUB400.COM * your public IBM i server' ]</msg>
<msg timestamp="20190504 09:55:04.130" level="INFO">The string "Welcome to PUB400.COM * your public IBM i server" was found</msg>
<msg timestamp="20190504 09:55:04.130" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:04.131" starttime="20190504 09:55:04.129"></status>
</kw>
<kw name="Write Bare In Position" library="Mainframe3270">
<doc>Send only the string to the screen at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>${user}</arg>
<arg>5</arg>
<arg>25</arg>
</arguments>
<msg timestamp="20190504 09:55:04.131" level="TRACE">Arguments: [ 'USER0112' | '5' | '25' ]</msg>
<msg timestamp="20190504 09:55:04.132" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:04.132" starttime="20190504 09:55:04.131"></status>
</kw>
<kw name="Write Bare In Position" library="Mainframe3270">
<doc>Send only the string to the screen at screen co-ordinates "ypos"/"xpos".</doc>
<arguments>
<arg>${password}</arg>
<arg>6</arg>
<arg>25</arg>
</arguments>
<msg timestamp="20190504 09:55:04.132" level="TRACE">Arguments: [ 'user0112' | '6' | '25' ]</msg>
<msg timestamp="20190504 09:55:04.133" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:04.133" starttime="20190504 09:55:04.132"></status>
</kw>
<kw name="Send Enter" library="Mainframe3270">
<doc>Send a Enter to the screen.</doc>
<msg timestamp="20190504 09:55:04.133" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:55:04.979" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:04.979" starttime="20190504 09:55:04.133"></status>
</kw>
<kw name="Check if user is allocated to another job" library="pub400_resources">
<msg timestamp="20190504 09:55:04.980" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Page Should Contain String</arg>
<arg>is allocated to another job</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190504 09:55:04.980" level="TRACE">Arguments: [ 'Page Should Contain String' | 'is allocated to another job' ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>is allocated to another job</arg>
</arguments>
<msg timestamp="20190504 09:55:04.981" level="TRACE">Arguments: [ 'is allocated to another job' ]</msg>
<msg timestamp="20190504 09:55:04.986" level="FAIL">The string "is allocated to another job" was not found</msg>
<msg timestamp="20190504 09:55:04.986" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 325, in page_should_contain_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:55:04.986" starttime="20190504 09:55:04.981"></status>
</kw>
<msg timestamp="20190504 09:55:04.986" level="TRACE">Return: False</msg>
<msg timestamp="20190504 09:55:04.986" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20190504 09:55:04.986" starttime="20190504 09:55:04.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Send Enter</arg>
</arguments>
<msg timestamp="20190504 09:55:04.987" level="TRACE">Arguments: [ False | 'Send Enter' ]</msg>
<msg timestamp="20190504 09:55:04.987" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:04.987" starttime="20190504 09:55:04.987"></status>
</kw>
<msg timestamp="20190504 09:55:04.987" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:04.987" starttime="20190504 09:55:04.980"></status>
</kw>
<kw name="Check if user have messages to read" library="pub400_resources">
<msg timestamp="20190504 09:55:04.988" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Page Should Contain String</arg>
<arg>Display Messages</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190504 09:55:04.988" level="TRACE">Arguments: [ 'Page Should Contain String' | 'Display Messages' ]</msg>
<kw name="Page Should Contain String" library="Mainframe3270">
<doc>Search if a given string exists on the mainframe screen.</doc>
<arguments>
<arg>Display Messages</arg>
</arguments>
<msg timestamp="20190504 09:55:04.989" level="TRACE">Arguments: [ 'Display Messages' ]</msg>
<msg timestamp="20190504 09:55:04.993" level="FAIL">The string "Display Messages" was not found</msg>
<msg timestamp="20190504 09:55:04.994" level="DEBUG">Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/Mainframe3270/x3270.py", line 325, in page_should_contain_string
    if not result: raise Exception(message)</msg>
<status status="FAIL" endtime="20190504 09:55:04.994" starttime="20190504 09:55:04.988"></status>
</kw>
<msg timestamp="20190504 09:55:04.994" level="TRACE">Return: False</msg>
<msg timestamp="20190504 09:55:04.994" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20190504 09:55:04.994" starttime="20190504 09:55:04.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Send Enter</arg>
</arguments>
<msg timestamp="20190504 09:55:04.994" level="TRACE">Arguments: [ False | 'Send Enter' ]</msg>
<msg timestamp="20190504 09:55:04.994" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:04.995" starttime="20190504 09:55:04.994"></status>
</kw>
<msg timestamp="20190504 09:55:04.995" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:04.995" starttime="20190504 09:55:04.988"></status>
</kw>
<kw name="Wait Field Detected" library="Mainframe3270">
<doc>Wait until the screen is ready, the cursor has been positioned
on a modifiable field, and the keyboard is unlocked.</doc>
<msg timestamp="20190504 09:55:04.995" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:55:04.995" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:04.995" starttime="20190504 09:55:04.995"></status>
</kw>
<msg timestamp="20190504 09:55:04.995" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:04.996" starttime="20190504 09:55:04.129"></status>
</kw>
<kw name="Wait Until String" library="Mainframe3270">
<doc>Wait until a string exists on the mainframe screen to perform the next step. If the string not appear on
5 seconds the keyword will raise a exception. You can define a different timeout.</doc>
<arguments>
<arg>${main_menu_title}</arg>
<arg>timeout=4</arg>
</arguments>
<msg timestamp="20190504 09:55:04.997" level="TRACE">Arguments: [ 'IBM i Main Menu' | timeout=4 ]</msg>
<msg timestamp="20190504 09:55:04.998" level="TRACE">Return: 'IBM i Main Menu'</msg>
<status status="PASS" endtime="20190504 09:55:04.998" starttime="20190504 09:55:04.996"></status>
</kw>
<kw name="Logout" library="pub400_resources">
<msg timestamp="20190504 09:55:04.999" level="TRACE">Arguments: [  ]</msg>
<kw name="Write Bare" library="Mainframe3270">
<doc>Send only the string to the screen at the current cursor location.</doc>
<arguments>
<arg>90</arg>
</arguments>
<msg timestamp="20190504 09:55:04.999" level="TRACE">Arguments: [ '90' ]</msg>
<msg timestamp="20190504 09:55:05.000" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:05.000" starttime="20190504 09:55:04.999"></status>
</kw>
<kw name="Send Enter" library="Mainframe3270">
<doc>Send a Enter to the screen.</doc>
<msg timestamp="20190504 09:55:05.000" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:55:05.842" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:05.842" starttime="20190504 09:55:05.000"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190504 09:55:05.843" level="TRACE">Arguments: [ '1s' ]</msg>
<msg timestamp="20190504 09:55:06.844" level="INFO">Slept 1 second</msg>
<msg timestamp="20190504 09:55:06.844" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:06.844" starttime="20190504 09:55:05.843"></status>
</kw>
<msg timestamp="20190504 09:55:06.845" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:06.845" starttime="20190504 09:55:04.998"></status>
</kw>
<kw type="teardown" name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<msg timestamp="20190504 09:55:06.846" level="TRACE">Arguments: [ 'Fatal Error' ]</msg>
<msg timestamp="20190504 09:55:06.847" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:06.847" starttime="20190504 09:55:06.846"></status>
</kw>
<tags>
<tag>KT</tag>
</tags>
<status status="PASS" endtime="20190504 09:55:06.847" critical="yes" starttime="20190504 09:55:04.128"></status>
</test>
<status status="PASS" endtime="20190504 09:55:06.851" starttime="20190504 09:54:39.012"></status>
</suite>
<kw type="teardown" name="Close Connection" library="Mainframe3270">
<doc>Disconnect from the host.</doc>
<msg timestamp="20190504 09:55:06.861" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20190504 09:55:06.861" level="DEBUG">terminal client terminated</msg>
<msg timestamp="20190504 09:55:06.869" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190504 09:55:06.869" starttime="20190504 09:55:06.860"></status>
</kw>
<status status="PASS" endtime="20190504 09:55:06.869" starttime="20190504 09:54:28.944"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="43">Critical Tests</stat>
<stat fail="0" pass="43">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="15">KET</stat>
<stat fail="0" pass="28">KT</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="43">Tests</stat>
<stat fail="0" id="s1-s1" name="Keyword Exceptions Test" pass="15">Tests.Keyword Exceptions Test</stat>
<stat fail="0" id="s1-s2" name="Keyword Test" pass="28">Tests.Keyword Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
